var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.069,1,2.902]],["body/controllers/AppController.html",[0,1.729,1,4.694,2,1.377,3,0.149,4,0.13,5,0.13,6,4.506,7,0.84,8,1.67,9,6.485,10,1.76,11,0.013,12,0.904,13,5.172,14,1.33,15,1.455,16,0.464,17,0.664,18,4.472,19,4.506,20,0.149,21,0.227,22,1.528,23,2.764,24,1.33,25,5.172,26,0.01,27,0.01]],["title/modules/AppModule.html",[28,0.869,29,2.902]],["body/modules/AppModule.html",[1,3.459,2,1.039,3,0.072,4,0.063,5,0.063,11,0.013,16,0.558,17,0.323,18,3.893,19,2.191,20,0.072,21,0.11,26,0.006,27,0.006,28,1.036,29,5.919,30,0.888,31,0.921,32,0.993,33,0.993,34,0.921,35,1.819,36,0.993,37,2.191,38,2.191,39,2.191,40,4.154,41,4.154,42,4.154,43,4.154,44,4.154,45,4.154,46,4.154,47,4.154,48,4.154,49,4.154,50,4.154,51,4.154,52,4.154,53,3.893,54,4.154,55,2.263,56,1.542,57,0.993,58,0.993,59,2.515,60,3.069,61,2.515,62,2.515,63,2.515,64,2.515,65,2.515,66,2.515,67,2.515,68,2.515,69,2.515,70,2.515,71,2.515,72,2.191,73,2.191,74,1.818,75,1.977,76,2.515,77,2.515,78,2.515,79,2.515,80,2.515,81,2.515,82,2.515,83,2.515,84,2.515,85,2.515,86,1.414]],["title/injectables/AppService.html",[18,2.53,87,0.9]],["body/injectables/AppService.html",[3,0.156,4,0.137,5,0.137,7,0.883,8,1.722,9,6.6,11,0.013,12,0.95,14,1.398,15,1.501,16,0.389,17,0.698,18,4.22,20,0.156,21,0.238,24,1.398,26,0.011,27,0.011,87,1.501,88,2.147,89,4.735,90,5.435,91,5.435,92,5.435]],["title/controllers/AuthController.html",[0,1.069,93,2.902]],["body/controllers/AuthController.html",[0,1.018,2,1.018,3,0.11,4,0.096,5,0.096,7,0.621,8,1.368,10,1.81,11,0.013,12,0.93,14,1.368,16,0.514,17,0.491,20,0.11,21,0.168,22,1.13,24,1.368,26,0.009,27,0.009,86,3.438,93,3.844,94,3.332,95,1.779,96,3.825,97,4.632,98,5.325,99,3.332,100,4.832,101,3.825,102,3.825,103,1.517,104,1.368,105,1,106,1.277,107,3.332,108,4.832,109,6.549,110,3.825,111,3.825,112,3.825,113,3.825,114,2.585,115,1.947,116,4.181,117,3.851,118,3.332,119,3.332,120,3.332,121,3.332,122,3.332,123,1.947,124,3.825,125,5.317,126,3.825,127,3.825,128,1.947,129,3.825,130,3.825,131,3.825,132,3.825]],["title/guards/AuthGuard.html",[133,3.157,134,2.902]],["body/guards/AuthGuard.html",[3,0.09,4,0.079,5,0.079,7,0.511,8,1.19,11,0.014,12,0.959,14,1.19,15,1.037,16,0.461,17,0.404,20,0.09,21,0.138,24,1.411,26,0.007,27,0.007,87,1.037,103,1.565,104,1.411,105,1.211,106,1.317,121,2.743,123,1.603,128,2.355,134,3.344,135,3.148,136,2.743,137,2.253,138,6.046,139,5.064,140,4.626,141,1.979,142,3.148,143,5.295,144,6.961,145,3.148,146,4.626,147,6.046,148,3.148,149,3.148,150,4.626,151,4.626,152,3.787,153,3.148,154,5.485,155,4.778,156,2.116,157,2.475,158,2.475,159,2.475,160,2.871,161,4.03,162,3.148,163,3.148,164,3.148,165,3.148,166,3.148,167,3.148,168,6.046,169,3.148,170,2.152,171,1.979,172,1.464,173,4.03,174,1.346,175,3.148,176,2.743,177,2.743,178,3.148,179,1.464,180,3.148,181,3.148]],["title/modules/AuthModule.html",[28,0.869,40,2.699]],["body/modules/AuthModule.html",[2,1.476,3,0.117,4,0.102,5,0.102,11,0.013,16,0.536,17,0.521,20,0.117,21,0.178,26,0.009,27,0.009,28,1.366,30,1.434,31,1.488,32,1.605,33,1.605,34,1.488,35,2.399,36,1.605,40,5.128,53,4.613,56,2.19,57,1.605,58,1.605,60,4.358,93,4.561,117,4.613,118,3.539,128,2.068,134,4.007,156,2.731,157,3.195,176,3.539,177,3.539,182,3.539,183,3.539,184,4.063,185,4.063,186,4.063,187,4.063,188,4.063,189,5.543,190,4.063,191,4.063,192,3.539,193,4.063,194,4.063,195,4.063,196,4.063,197,4.063]],["title/injectables/AuthService.html",[87,0.9,117,2.53]],["body/injectables/AuthService.html",[3,0.088,4,0.077,5,0.077,7,0.495,8,1.162,11,0.013,12,0.941,14,1.162,15,0.683,16,0.493,17,0.391,20,0.088,21,0.134,24,1.162,26,0.007,27,0.007,87,1.013,88,1.205,97,3.937,98,3.937,99,3.937,100,4.476,103,1.536,104,1.531,105,1.012,106,1.293,107,3.937,108,4.273,109,5.186,116,4.233,117,2.848,119,2.657,120,2.657,122,2.657,123,1.553,137,2.735,139,3.553,141,1.933,143,5.418,155,4.69,156,2.05,160,2.833,170,2.504,171,2.303,173,2.657,174,2.719,198,2.657,199,3.05,200,4.195,201,3.05,202,3.05,203,2.197,204,3.05,205,2.398,206,3.05,207,3.937,208,2.848,209,3.05,210,3.05,211,3.05,212,3.05,213,2.657,214,1.715,215,3.05,216,5.954,217,3.05,218,3.05,219,2.657,220,3.05,221,3.05,222,1.812,223,3.05,224,3.05,225,3.05,226,3.05,227,3.05,228,4.519,229,3.05,230,4.519,231,3.05,232,3.05,233,2.398]],["title/controllers/CategoryController.html",[0,1.069,234,2.902]],["body/controllers/CategoryController.html",[0,1.341,2,1.341,3,0.145,4,0.127,5,0.127,7,0.818,8,1.643,10,1.715,11,0.013,12,0.881,14,1.296,16,0.502,17,0.647,20,0.145,21,0.221,22,1.488,24,1.296,26,0.01,27,0.01,86,3.592,95,2.344,234,4.617,235,4.39,236,4.39,237,3.03,238,5.039,239,5.039,240,3.962,241,4.419,242,4.39,243,5.039,244,5.039]],["title/modules/CategoryModule.html",[28,0.869,41,2.699]],["body/modules/CategoryModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,41,5.203,56,2.496,57,1.957,58,1.957,234,5.029,241,4.877,242,4.316,245,4.316,246,4.316,247,4.954,248,4.954]],["title/injectables/CategoryService.html",[87,0.9,241,2.53]],["body/injectables/CategoryService.html",[3,0.133,4,0.116,5,0.116,7,0.751,8,1.554,11,0.013,12,1.057,14,1.189,16,0.432,17,0.593,20,0.133,21,0.203,22,1.365,24,1.189,26,0.01,27,0.01,55,2.783,87,1.354,88,1.826,103,1.319,104,1.189,105,0.869,106,1.11,137,2.766,141,1.977,160,2.06,170,2.15,171,1.977,172,2.15,174,1.977,179,2.15,203,2.247,237,2.933,241,3.807,249,4.027,250,2.15,251,4.623,252,4.623,253,3.229,254,2.15,255,6.042,256,4.623,257,2.247]],["title/classes/Chapter.html",[21,0.176,258,2.385]],["body/classes/Chapter.html",[3,0.177,4,0.155,5,0.155,11,0.012,20,0.177,21,0.269,26,0.012,27,0.012,258,4.283,259,1.694,260,5.355]],["title/controllers/ChaptersController.html",[0,1.069,261,2.902]],["body/controllers/ChaptersController.html",[0,0.838,2,0.838,3,0.09,4,0.079,5,0.079,7,0.511,8,1.19,10,2.192,11,0.013,12,1.126,14,1.657,15,1.509,16,0.461,17,0.404,20,0.09,21,0.138,22,0.93,23,1.682,24,1.657,26,0.007,27,0.007,95,1.464,103,1.725,104,1.555,105,1.136,106,1.451,114,2.249,115,2.792,123,1.603,152,3.4,214,1.771,237,2.484,261,3.344,262,2.743,263,2.475,264,1.32,265,2.062,266,2.152,267,2.445,268,2.743,269,4.243,270,3.442,271,3.148,272,3.148,273,1.603,274,1.801,275,2.915,276,3.148,277,2.466,278,1.464,279,2.915,280,3.148,281,1.464,282,4.064,283,4.778,284,2.915,285,3.148,286,1.984,287,1.771,288,3.11,289,3.456,290,2.743,291,1.984,292,1.682,293,1.153,294,2.475,295,3.148,296,1.771,297,3.148,298,2.475,299,3.148,300,1.984,301,3.148,302,2.475,303,3.148,304,1.984,305,3.148]],["title/modules/ChaptersModule.html",[28,0.869,42,2.699]],["body/modules/ChaptersModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,42,5.203,56,2.496,57,1.957,58,1.957,261,5.029,289,4.877,290,4.316,306,4.316,307,4.316,308,4.954,309,4.954]],["title/injectables/ChaptersService.html",[87,0.9,289,2.53]],["body/injectables/ChaptersService.html",[3,0.072,4,0.063,5,0.063,7,0.408,8,1.002,11,0.014,12,1.08,14,1.588,15,1.383,16,0.385,17,0.322,20,0.072,21,0.11,22,0.741,24,1.5,26,0.006,27,0.006,55,2.261,87,0.873,88,0.991,103,1.664,104,1.5,105,1.096,106,1.4,128,1.277,137,1.963,141,1.073,160,2.401,170,1.813,171,1.667,172,1.813,174,2.043,179,1.813,203,1.22,205,3.757,208,2.456,237,2.213,250,1.167,254,1.167,257,1.895,258,2.315,263,4.586,264,1.363,265,1.737,266,1.813,267,1.737,268,3.395,269,3.675,273,1.984,274,2.245,277,2.505,278,1.813,281,1.813,282,3.212,283,4.162,289,2.456,291,1.581,292,1.341,293,0.919,294,1.973,310,2.186,311,2.509,312,2.536,313,2.509,314,2.509,315,2.509,316,2.509,317,2.509,318,1.973,319,3.897,320,1.814,321,3.897,322,2.817,323,3.897,324,2.509,325,2.186,326,4.778,327,2.509,328,2.186,329,1.341,330,1.341,331,2.509,332,3.064,333,3.064,334,2.186,335,2.509,336,2.509,337,3.212,338,2.509,339,2.186,340,1.118,341,1.687,342,1.687]],["title/controllers/ChartController.html",[0,1.069,343,2.902]],["body/controllers/ChartController.html",[0,1.26,2,1.26,3,0.136,4,0.119,5,0.119,7,0.769,8,1.578,10,1.611,11,0.013,12,0.828,14,1.218,16,0.487,17,0.608,20,0.136,21,0.208,22,1.398,23,2.53,24,1.218,26,0.01,27,0.01,86,3.452,95,2.202,103,1.351,104,1.218,105,0.89,106,1.137,240,3.722,274,2.236,277,2.247,287,2.663,288,4.126,343,4.436,344,4.124,345,4.734,346,5.346,347,4.124,348,4.734,349,4.734,350,4.291,351,4.124,352,4.734,353,4.734,354,4.734,355,4.734]],["title/modules/ChartModule.html",[28,0.869,43,2.699]],["body/modules/ChartModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,43,5.203,56,2.496,57,1.957,58,1.957,343,5.029,350,4.877,351,4.316,356,4.316,357,4.316,358,4.954,359,4.954]],["title/injectables/ChartService.html",[87,0.9,350,2.53]],["body/injectables/ChartService.html",[3,0.126,4,0.11,5,0.11,7,0.712,8,1.5,11,0.013,12,1.02,14,1.127,16,0.417,17,0.562,20,0.126,21,0.192,22,1.294,24,1.127,26,0.009,27,0.009,55,2.741,87,1.307,88,1.731,103,1.664,104,1.5,105,1.096,106,1.4,137,2.694,141,1.874,160,1.953,170,2.038,171,1.874,172,2.038,174,1.874,179,2.038,203,2.13,250,2.038,253,3.117,254,2.038,257,2.13,274,2.152,277,2.136,340,1.953,346,5.081,347,5.081,350,3.675,360,3.817,361,4.381,362,4.381,363,5.832,364,3.817]],["title/controllers/CommentController.html",[0,1.069,365,2.902]],["body/controllers/CommentController.html",[0,1.052,2,1.052,3,0.114,4,0.099,5,0.099,7,0.642,8,1.399,10,1.852,11,0.013,12,0.951,14,1.399,15,1.627,16,0.445,17,0.507,20,0.114,21,0.173,22,1.168,23,2.113,24,1.6,26,0.009,27,0.009,95,1.839,103,1.552,104,1.399,105,1.023,106,1.306,114,3.024,115,3.167,264,1.552,270,3.755,293,1.448,296,2.224,340,2.987,365,3.933,366,3.444,367,3.954,368,6.221,369,3.444,370,4.504,371,3.954,372,3.954,373,3.954,374,3.498,375,5.441,376,3.108,377,3.919,378,3.444,379,3.444,380,3.954,381,3.954,382,3.954,383,3.954,384,3.954,385,3.954,386,2.858]],["title/modules/CommentModule.html",[28,0.869,44,2.699]],["body/modules/CommentModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,44,5.203,56,2.496,57,1.957,58,1.957,365,5.029,377,4.877,378,4.316,387,4.316,388,4.316,389,4.954,390,4.954]],["title/injectables/CommentService.html",[87,0.9,377,2.53]],["body/injectables/CommentService.html",[3,0.063,4,0.055,5,0.055,7,0.357,8,0.903,11,0.014,12,0.876,14,1.128,15,0.983,16,0.358,17,0.282,20,0.063,21,0.096,22,0.65,24,1.128,26,0.006,27,0.006,55,2.137,87,0.787,88,0.869,103,1.429,104,1.687,105,0.941,106,1.202,128,3.497,137,2.695,141,0.941,160,1.955,170,2.04,171,1.876,172,2.04,174,1.502,179,2.04,203,2.132,208,3.86,222,3.252,237,1.443,250,1.023,253,2.676,254,1.023,257,2.132,258,1.306,264,1.002,274,1.916,277,1.834,291,1.386,292,1.175,293,0.805,312,2.517,322,4.219,329,3.119,330,1.175,333,2.762,334,3.06,340,1.566,370,3.367,374,2.467,377,2.213,379,1.916,391,1.916,392,3.513,393,2.199,394,3.06,395,2.199,396,3.513,397,2.199,398,3.513,399,2.199,400,5.008,401,2.199,402,3.513,403,2.539,404,3.513,405,4.769,406,2.975,407,3.513,408,2.199,409,3.513,410,2.199,411,4.304,412,1.478,413,3.513,414,3.06,415,2.361,416,3.06,417,3.06,418,1.306]],["title/classes/Course.html",[21,0.176,418,2.385]],["body/classes/Course.html",[3,0.177,4,0.155,5,0.155,11,0.012,20,0.177,21,0.269,26,0.012,27,0.012,259,1.694,418,4.283,419,5.355]],["title/controllers/CoursesController.html",[0,1.069,420,2.902]],["body/controllers/CoursesController.html",[0,0.496,2,0.496,3,0.054,4,0.047,5,0.126,7,0.303,8,0.79,10,2.272,11,0.013,12,1.167,14,1.717,16,0.409,17,0.239,20,0.054,21,0.082,22,0.551,23,0.996,24,1.717,26,0.005,27,0.005,86,2.203,95,0.867,103,1.864,104,1.681,105,1.278,106,1.569,114,1.905,115,1.994,123,1.564,152,4.109,214,1.048,237,1.867,240,1.466,258,1.107,264,0.876,265,1.369,266,1.429,267,1.746,270,3.904,273,0.949,274,2.483,275,1.175,277,2.393,278,0.867,279,1.935,281,0.867,284,1.935,286,1.175,287,1.048,288,4.016,291,1.175,292,0.996,293,0.683,296,1.048,298,3.08,300,1.175,302,3.08,304,1.175,312,0.766,329,2.428,340,2.025,420,2.22,421,1.624,422,1.624,423,2.676,424,3.072,425,2.676,426,3.413,427,3.413,428,3.413,429,3.918,430,1.864,431,3.072,432,1.864,433,1.624,434,3.602,435,1.864,436,1.864,437,1.864,438,1.864,439,3.072,440,1.864,441,1.864,442,3.072,443,1.864,444,1.864,445,1.864,446,1.624,447,3.072,448,1.864,449,1.624,450,3.072,451,1.864,452,1.864,453,3.054,454,3.413,455,1.864,456,1.864,457,2.415,458,3.072,459,1.864,460,1.864,461,3.413,462,1.864,463,1.864,464,1.864,465,3.072,466,2.468,467,1.624,468,1.466,469,1.864,470,1.466,471,1.864,472,1.864,473,1.864,474,1.864,475,1.864,476,3.072,477,1.864,478,1.864,479,1.864,480,1.864,481,1.864,482,1.864,483,1.864,484,1.864,485,1.864,486,1.864,487,1.624,488,1.864,489,1.864,490,1.864]],["title/modules/CoursesModule.html",[28,0.869,45,2.699]],["body/modules/CoursesModule.html",[2,1.508,3,0.12,4,0.106,5,0.143,11,0.013,16,0.529,17,0.538,20,0.12,21,0.184,26,0.009,27,0.009,28,1.388,30,1.48,31,1.536,32,1.657,33,1.657,34,1.536,35,2.438,36,1.657,45,4.968,56,2.238,57,1.657,58,1.657,60,3.297,74,4.094,75,3.297,86,2.358,123,2.135,270,2.241,420,4.636,466,4.657,467,3.653,470,3.297,491,3.653,492,3.653,493,4.194,494,4.194,495,4.194,496,5.664,497,4.194,498,4.194,499,4.194,500,4.194,501,4.194,502,4.194,503,4.194,504,4.194,505,4.194,506,4.194,507,4.194,508,4.194]],["title/injectables/CoursesService.html",[87,0.9,466,2.53]],["body/injectables/CoursesService.html",[3,0.029,4,0.026,5,0.076,7,0.166,8,0.47,11,0.014,12,0.964,14,1.457,15,1.199,16,0.276,17,0.234,20,0.029,21,0.045,22,0.301,24,1.419,26,0.003,27,0.003,55,1.414,74,0.737,75,0.802,87,0.409,88,0.403,103,1.527,104,1.553,105,1.065,106,1.285,128,3.749,137,2.962,141,0.436,160,2.458,170,2.565,171,2.423,172,2.489,174,2.359,179,2.489,203,2.602,205,1.435,208,2.432,222,1.793,236,1.59,237,1.24,250,0.474,253,2.655,254,0.474,257,2.415,258,1.084,263,1.949,264,0.707,265,0.814,266,0.849,267,0.814,273,0.929,274,2.237,277,2.124,278,0.849,281,0.849,287,1.027,291,0.642,292,0.545,293,0.373,312,2.635,318,2.731,320,1.32,322,3.987,328,1.59,329,2.241,330,1.856,332,3.527,333,2.731,339,3.026,340,2.585,364,0.888,411,3.298,412,1.227,416,2.159,418,2.816,422,4.13,423,1.59,425,1.59,426,1.59,427,1.59,428,2.159,433,1.59,434,2.432,446,1.59,449,1.59,453,2.03,454,2.159,457,1.435,461,2.159,466,1.15,468,0.802,487,0.888,509,0.888,510,1.826,511,1.826,512,1.02,513,1.826,514,1.02,515,1.02,516,1.02,517,1.826,518,1.02,519,3.019,520,1.826,521,1.826,522,1.02,523,1.826,524,1.02,525,1.02,526,1.02,527,1.02,528,1.02,529,1.02,530,1.02,531,1.826,532,1.02,533,1.02,534,1.02,535,2.374,536,1.02,537,2.159,538,1.02,539,2.511,540,1.02,541,2.63,542,1.02,543,1.02,544,1.02,545,1.02,546,1.02,547,1.02,548,1.02,549,1.826,550,1.02,551,1.02,552,1.826,553,1.826,554,1.792,555,0.802,556,1.826,557,1.02,558,1.02,559,0.888,560,1.02,561,1.826,562,1.02,563,3.86,564,1.02,565,1.02,566,1.02,567,1.826,568,1.826,569,1.02,570,1.02,571,0.737,572,1.02,573,1.02,574,0.802,575,1.02,576,1.02,577,1.02,578,1.826,579,1.02]],["title/classes/CreateChapterDto.html",[21,0.176,269,2.53]],["body/classes/CreateChapterDto.html",[3,0.148,4,0.13,5,0.13,7,0.836,11,0.013,12,1.239,15,1.451,20,0.148,21,0.226,26,0.01,27,0.01,105,1.331,106,1.555,259,1.419,269,4.08,274,2.44,330,3.785,332,5.569,340,3.157,580,6.474,581,4.049,582,2.886,583,5.15,584,5.15,585,5.15]],["title/classes/CreateCommentDto.html",[21,0.176,370,2.699]],["body/classes/CreateCommentDto.html",[3,0.148,4,0.13,5,0.13,7,0.836,11,0.013,12,1.239,15,1.451,20,0.148,21,0.226,26,0.01,27,0.01,105,1.331,106,1.555,259,1.419,274,2.44,370,4.353,374,3.984,403,5.12,414,6.171,582,2.886,586,6.474,587,4.486,588,5.15,589,5.15,590,5.15]],["title/classes/CreateCourseDto.html",[21,0.176,434,2.53]],["body/classes/CreateCourseDto.html",[3,0.132,4,0.115,5,0.115,7,0.745,11,0.013,12,1.326,15,1.818,20,0.132,21,0.201,26,0.01,27,0.01,105,1.425,259,1.264,312,2.755,330,3.583,434,3.788,535,5.273,537,5.842,539,4.847,541,5.842,582,2.679,591,6.73,592,3.606,593,4.587,594,4.587,595,4.587,596,4.587,597,4.587,598,4.587]],["title/classes/CreateFolderDto.html",[21,0.176,599,2.53]],["body/classes/CreateFolderDto.html",[3,0.124,4,0.108,5,0.108,7,0.698,10,1.961,11,0.013,12,1.213,15,1.555,16,0.308,20,0.124,21,0.252,26,0.009,27,0.009,104,1.671,105,1.304,106,1.666,259,1.185,274,2.278,312,2.669,340,2.895,415,3.873,571,5.382,582,2.568,599,3.63,600,6.302,601,3.382,602,4.367,603,5.761,604,4.301,605,4.301,606,4.301,607,4.301,608,5.107,609,3.747,610,2.419,611,5.018]],["title/classes/CreateLearningDto.html",[21,0.176,612,2.53]],["body/classes/CreateLearningDto.html",[3,0.176,4,0.154,5,0.154,11,0.012,20,0.176,21,0.268,26,0.012,27,0.012,259,1.685,612,4.53,613,5.327,614,4.808]],["title/classes/CreateNoteDto.html",[21,0.176,615,2.53]],["body/classes/CreateNoteDto.html",[3,0.11,4,0.096,5,0.096,7,0.621,10,2.08,11,0.013,12,1.257,15,1.61,16,0.274,20,0.11,21,0.233,26,0.009,27,0.009,105,1.351,106,1.586,259,1.054,274,2.36,312,2.511,330,3.266,340,2.724,374,3.438,403,4.419,415,4.109,571,5.519,582,2.37,609,3.332,610,2.151,611,5.325,615,3.35,616,6.422,617,3.007,618,5.325,619,3.825,620,6.113,621,3.825,622,3.825,623,3.825,624,3.825,625,3.825,626,5.755,627,3.332]],["title/classes/CreateNotebookDto.html",[21,0.176,628,2.53]],["body/classes/CreateNotebookDto.html",[3,0.176,4,0.154,5,0.154,11,0.012,20,0.176,21,0.268,26,0.012,27,0.012,259,1.685,628,4.53,629,5.327,630,4.808]],["title/classes/CreatePaymentDto.html",[21,0.176,631,2.699]],["body/classes/CreatePaymentDto.html",[3,0.127,4,0.111,5,0.111,7,0.717,10,1.502,11,0.013,12,1.312,15,1.78,16,0.316,20,0.127,21,0.257,26,0.009,27,0.009,104,1.693,105,1.41,222,3.909,259,1.216,274,1.924,582,2.612,610,2.483,626,5.733,631,3.94,632,6.668,633,3.845,634,6.581,635,6.581,636,6.581,637,6.581,638,4.414,639,4.414,640,4.414,641,4.414,642,4.414,643,4.414]],["title/classes/CreateVideoDto.html",[21,0.176,644,2.53]],["body/classes/CreateVideoDto.html",[3,0.139,4,0.122,5,0.122,7,0.788,10,1.651,11,0.013,12,1.09,15,1.397,16,0.347,20,0.179,21,0.302,26,0.01,27,0.01,105,1.172,259,1.337,274,2.387,330,2.593,340,3.071,406,4.092,554,4.98,555,3.815,574,3.815,582,2.779,608,5.914,610,2.729,644,3.928,645,5.417,646,3.815,647,4.852,648,4.852,649,4.227,650,3.815]],["title/modules/DatabaseModule.html",[28,0.869,46,2.699]],["body/modules/DatabaseModule.html",[3,0.14,4,0.123,5,0.123,11,0.013,16,0.447,17,0.625,20,0.14,21,0.214,26,0.01,27,0.01,28,1.494,30,1.719,31,1.784,32,1.925,33,1.925,34,1.784,35,2.625,36,2.727,46,5.268,55,2.996,56,2.47,57,1.925,58,1.925,192,5.446,651,4.244,652,4.872,653,4.244,654,4.872,655,4.872]],["title/injectables/DatabaseService.html",[55,1.47,87,0.9]],["body/injectables/DatabaseService.html",[3,0.148,4,0.13,5,0.13,7,0.836,8,1.665,11,0.013,12,0.9,14,1.324,16,0.463,17,0.661,20,0.148,21,0.226,26,0.01,27,0.01,55,2.371,87,1.451,88,2.034,137,2.91,159,4.049,174,2.202,292,2.752,656,4.486,657,3.846,658,7.083,659,6.81,660,5.15,661,5.15]],["title/classes/Folder.html",[21,0.176,662,2.699]],["body/classes/Folder.html",[3,0.177,4,0.155,5,0.155,11,0.012,20,0.177,21,0.269,26,0.012,27,0.012,259,1.694,662,4.847,663,5.355]],["title/controllers/FoldersController.html",[0,1.069,664,2.902]],["body/controllers/FoldersController.html",[0,0.818,2,0.818,3,0.088,4,0.077,5,0.077,7,0.499,8,1.169,10,2.17,11,0.013,12,1.115,14,1.64,15,1.695,16,0.427,17,0.395,20,0.088,21,0.135,22,0.908,23,1.643,24,1.64,26,0.007,27,0.007,95,1.43,103,1.819,104,1.64,105,1.199,106,1.531,114,2.21,115,2.754,152,2.557,214,1.729,237,1.868,264,1.297,265,2.026,266,2.114,267,2.026,270,3.568,273,1.565,275,2.864,277,2.445,278,1.43,279,2.864,281,1.43,284,2.864,286,1.937,287,1.729,293,1.126,296,1.729,300,1.937,304,1.937,312,1.263,376,2.417,386,2.222,599,4.353,602,4.017,664,3.286,665,2.678,666,3.074,667,2.678,668,3.074,669,2.678,670,3.074,671,3.074,672,3.074,673,4.768,674,3.074,675,3.408,676,2.678,677,3.574,678,1.729,679,3.074,680,3.074,681,2.678,682,2.678,683,3.074,684,3.074,685,2.417,686,3.074,687,3.074]],["title/modules/FoldersModule.html",[28,0.869,47,2.699]],["body/modules/FoldersModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,47,5.203,56,2.496,57,1.957,58,1.957,664,5.029,675,4.877,676,4.316,688,4.316,689,4.316,690,4.954,691,4.954]],["title/injectables/FoldersService.html",[87,0.9,675,2.53]],["body/injectables/FoldersService.html",[3,0.083,4,0.073,5,0.073,7,0.47,8,1.117,11,0.013,12,1.142,14,1.679,15,1.463,16,0.415,17,0.371,20,0.083,21,0.127,22,0.854,24,1.599,26,0.007,27,0.007,55,2.391,87,0.973,88,1.143,103,1.862,104,1.679,105,1.227,106,1.567,128,1.473,137,2.143,141,1.237,160,1.289,170,1.345,171,1.237,172,1.345,174,1.237,179,1.345,203,1.406,237,1.785,250,1.345,253,2.321,254,1.345,257,1.406,264,1.239,265,1.936,266,2.02,267,1.936,273,2.212,274,2.451,277,2.391,278,2.02,281,2.02,293,1.059,312,2.143,329,1.546,337,3.507,341,1.944,342,1.944,411,2.274,415,3.507,417,2.52,599,4.113,602,4.178,662,3.507,667,3.784,673,4.552,675,2.737,677,3.415,678,1.627,692,2.52,693,2.892,694,2.892,695,3.784,696,2.892,697,2.892,698,2.892,699,2.892,700,4.344,701,2.892,702,2.892]],["title/classes/Gateway.html",[21,0.176,703,2.902]],["body/classes/Gateway.html",[3,0.063,4,0.055,5,0.055,7,0.356,8,0.901,10,1.701,11,0.014,12,1.019,14,1.285,15,1.12,16,0.391,17,0.281,20,0.063,21,0.096,26,0.006,27,0.006,55,2.134,103,1.426,104,1.285,105,1.29,106,1.2,114,2.833,116,1.723,137,2.513,139,2.754,141,1.498,143,4.809,156,1.473,159,2.754,160,2.227,172,1.629,174,1.498,179,1.629,208,1.381,250,1.019,254,1.019,257,1.703,259,0.604,264,0.999,267,1.561,274,1.794,277,1.283,312,2.76,330,2.67,374,2.811,403,3.612,405,3.051,406,1.301,412,2.354,457,4.581,582,1.561,659,5.328,703,2.532,704,1.909,705,5.076,706,4.375,707,4.375,708,4.375,709,2.191,710,4.375,711,2.191,712,2.191,713,5.827,714,6.354,715,3.502,716,2.191,717,2.191,718,3.502,719,2.191,720,3.502,721,2.191,722,2.191,723,3.502,724,2.191,725,4.375,726,4.997,727,2.191,728,2.191,729,1.909,730,1.909,731,2.191,732,2.191,733,2.191,734,2.191,735,2.191,736,2.191,737,2.191,738,2.191,739,2.191,740,2.191,741,1.723,742,2.191,743,3.502,744,1.909,745,2.191,746,2.191,747,3.502,748,3.502,749,3.502,750,2.191,751,4.375,752,4.375,753,2.191,754,2.191,755,1.909,756,3.502,757,3.502,758,3.502]],["title/modules/GatewayModule.html",[28,0.869,48,2.699]],["body/modules/GatewayModule.html",[3,0.164,4,0.144,5,0.144,11,0.013,16,0.494,17,0.735,20,0.164,21,0.251,26,0.011,27,0.011,28,1.496,30,2.021,35,2.178,48,4.648,703,5.368,759,5.727]],["title/classes/Learning.html",[21,0.176,760,2.699]],["body/classes/Learning.html",[3,0.177,4,0.155,5,0.155,11,0.012,20,0.177,21,0.269,26,0.012,27,0.012,259,1.694,760,4.847,761,5.355]],["title/controllers/LearningController.html",[0,1.069,762,2.902]],["body/controllers/LearningController.html",[0,0.854,2,0.854,3,0.092,4,0.081,5,0.081,7,0.521,8,1.207,10,2.209,11,0.013,12,1.135,14,1.669,15,1.519,16,0.436,17,0.412,20,0.092,21,0.141,22,0.948,23,1.714,24,1.669,26,0.008,27,0.008,95,1.492,103,1.74,104,1.569,105,1.147,106,1.465,114,2.281,115,2.823,152,2.638,214,1.804,237,2.506,264,1.338,265,2.091,266,2.182,267,2.471,270,2.963,274,1.82,275,2.956,277,2.234,278,1.492,279,2.956,281,1.492,284,2.956,286,2.022,287,1.804,288,3.153,293,1.175,296,1.804,300,2.022,302,2.523,304,2.022,386,2.319,612,4.272,678,1.804,741,3.688,760,2.157,762,3.391,763,2.795,764,2.795,765,3.208,766,3.208,767,2.795,768,3.208,769,3.208,770,4.826,771,3.208,772,3.494,773,2.795,774,3.688,775,3.208,776,3.208,777,3.208,778,3.208,779,3.208,780,3.208]],["title/modules/LearningModule.html",[28,0.869,49,2.699]],["body/modules/LearningModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,49,5.203,56,2.496,57,1.957,58,1.957,762,5.029,772,4.877,773,4.316,781,4.316,782,4.316,783,4.954,784,4.954]],["title/injectables/LearningService.html",[87,0.9,772,2.53]],["body/injectables/LearningService.html",[3,0.087,4,0.076,5,0.076,7,0.492,8,1.156,11,0.013,12,1.161,14,1.708,15,1.54,16,0.424,17,0.388,20,0.087,21,0.133,22,0.894,24,1.63,26,0.007,27,0.007,55,2.431,87,1.007,88,1.196,103,1.808,104,1.63,105,1.191,106,1.521,137,2.202,141,1.294,160,1.349,170,1.408,171,1.922,172,1.408,174,1.294,179,1.408,203,1.471,237,2.437,250,1.408,253,2.401,254,1.408,257,1.471,264,1.282,265,2.003,266,2.09,267,2.003,274,2.368,277,2.172,278,2.09,281,2.09,293,1.108,312,2.603,337,3.987,341,2.035,342,2.035,374,1.702,412,2.035,612,3.992,678,1.702,741,3.533,755,2.637,760,4.463,764,3.914,767,3.914,770,4.62,772,2.831,774,3.533,785,2.637,786,3.027,787,3.027,788,3.027,789,3.027,790,3.027,791,3.027,792,2.637,793,3.027]],["title/classes/Note.html",[21,0.176,794,2.902]],["body/classes/Note.html",[3,0.177,4,0.155,5,0.155,11,0.012,20,0.177,21,0.269,26,0.012,27,0.012,259,1.694,794,5.212,795,5.355]],["title/classes/Notebook.html",[21,0.176,796,2.699]],["body/classes/Notebook.html",[3,0.177,4,0.155,5,0.155,11,0.012,20,0.177,21,0.269,26,0.012,27,0.012,259,1.694,796,4.847,797,5.355]],["title/controllers/NotebookController.html",[0,1.069,798,2.902]],["body/controllers/NotebookController.html",[0,0.878,2,0.878,3,0.095,4,0.083,5,0.083,7,0.536,8,1.231,10,2.234,11,0.013,12,1.148,14,1.688,15,1.652,16,0.442,17,0.423,20,0.095,21,0.145,22,0.974,23,1.763,24,1.688,26,0.008,27,0.008,95,1.534,103,1.763,104,1.59,105,1.162,106,1.484,114,2.327,115,2.868,214,1.855,237,2.539,264,1.365,265,2.133,266,2.226,267,2.133,273,1.679,275,3.016,277,2.507,278,1.534,279,3.016,281,1.534,284,3.016,286,2.078,287,1.855,293,1.208,296,1.855,300,2.078,304,2.078,628,4.313,678,1.855,685,2.593,796,2.217,798,3.46,799,2.873,800,2.873,801,3.298,802,3.298,803,3.298,804,3.298,805,4.863,806,3.298,807,3.55,808,2.873,809,3.763,810,3.298,811,3.298,812,3.298,813,3.298,814,3.298,815,3.298]],["title/modules/NotebookModule.html",[28,0.869,50,2.699]],["body/modules/NotebookModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,50,5.203,56,2.496,57,1.957,58,1.957,798,5.029,807,4.877,808,4.316,816,4.316,817,4.316,818,4.954,819,4.954]],["title/injectables/NotebookService.html",[87,0.9,807,2.53]],["body/injectables/NotebookService.html",[3,0.101,4,0.088,5,0.088,7,0.571,8,1.289,11,0.013,12,1.177,14,1.851,15,1.508,16,0.418,17,0.451,20,0.101,21,0.154,24,1.731,26,0.008,27,0.008,87,1.123,88,1.389,103,1.816,104,1.637,105,1.196,106,1.528,171,1.504,237,2.615,264,1.429,265,2.233,266,2.331,267,2.233,273,2.551,274,2.459,277,2.562,278,2.331,281,2.331,293,1.288,337,4.523,341,2.363,342,2.363,628,4.239,678,1.977,792,3.063,796,4.523,800,4.365,805,4.839,807,3.157,809,3.94,820,3.063,821,3.516,822,3.516,823,3.516,824,3.516,825,3.516]],["title/controllers/NotesController.html",[0,1.069,826,2.902]],["body/controllers/NotesController.html",[0,0.734,2,0.734,3,0.079,4,0.069,5,0.069,7,0.448,8,1.077,10,2.181,11,0.013,12,1.121,14,1.649,15,1.656,16,0.435,17,0.354,20,0.079,21,0.121,22,0.814,23,1.473,24,1.649,26,0.007,27,0.007,95,1.282,103,1.828,104,1.649,105,1.205,106,1.539,114,2.037,115,2.579,123,1.403,152,1.55,214,1.55,237,1.721,264,1.195,265,1.867,266,1.948,267,1.867,270,4.073,273,1.403,274,1.663,275,2.639,277,2.347,278,1.282,279,2.639,281,1.282,284,2.639,286,1.737,287,1.55,288,2.816,293,1.01,296,1.55,300,1.737,304,1.737,312,1.133,374,2.356,376,2.167,386,3.662,602,3.804,615,4.197,669,2.401,678,1.55,681,2.401,682,2.401,685,2.167,826,3.028,827,2.401,828,2.401,829,4.414,830,2.401,831,2.757,832,2.757,833,2.757,834,2.401,835,4.189,836,2.757,837,2.757,838,4.614,839,2.757,840,3.192,841,2.401,842,3.294,843,2.757,844,2.757,845,2.757,846,2.757,847,2.757,848,2.757,849,2.757,850,2.757]],["title/modules/NotesModule.html",[28,0.869,51,2.699]],["body/modules/NotesModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,51,5.203,56,2.496,57,1.957,58,1.957,826,5.029,840,4.877,841,4.316,851,4.316,852,4.316,853,4.954,854,4.954]],["title/injectables/NotesService.html",[87,0.9,840,2.53]],["body/injectables/NotesService.html",[3,0.062,4,0.054,5,0.054,7,0.351,8,0.89,11,0.014,12,1.063,14,1.489,15,1.531,16,0.354,17,0.277,20,0.062,21,0.095,22,0.638,24,1.564,26,0.006,27,0.006,55,2.12,87,0.775,88,0.853,103,1.735,104,1.564,105,1.143,106,1.46,128,1.099,137,2.859,141,0.923,160,2.417,170,2.305,171,2.119,172,2.305,174,2.32,179,2.305,203,2.409,213,1.881,214,1.214,237,1.422,250,1.004,253,2.898,254,1.004,257,2.409,264,1.236,265,1.543,266,1.61,267,1.543,273,1.762,274,2.381,277,2.227,278,1.61,281,1.61,293,0.791,312,2.944,329,2.315,337,2.326,340,0.962,341,1.451,342,1.451,374,2.436,412,1.451,415,2.912,602,3.331,615,3.647,618,3.015,662,2.326,678,1.214,695,3.015,794,4.395,828,3.015,829,3.015,830,3.015,834,3.015,838,4.087,840,2.181,842,2.721,855,1.881,856,2.159,857,2.159,858,2.159,859,2.159,860,2.159,861,2.159,862,2.159,863,4.332,864,2.159,865,2.159,866,3.461,867,2.159,868,2.159,869,2.159,870,2.159,871,3.015,872,2.159]],["title/controllers/PaymentController.html",[0,1.069,873,2.902]],["body/controllers/PaymentController.html",[0,1.202,2,1.202,3,0.13,4,0.114,5,0.114,7,0.733,8,1.53,10,1.537,11,0.013,12,0.79,14,1.162,16,0.506,17,0.58,20,0.13,21,0.198,22,1.334,24,1.162,26,0.01,27,0.01,95,2.1,103,1.288,104,1.162,105,0.849,106,1.084,114,3.235,115,3.388,123,2.299,152,3.979,264,1.697,270,3.928,293,1.654,296,2.54,298,3.551,369,3.934,631,4.755,873,4.301,874,3.934,875,4.516,876,4.516,877,3.934,878,4.193,879,3.934,880,4.516,881,4.516]],["title/modules/PaymentModule.html",[28,0.869,52,2.699]],["body/modules/PaymentModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,52,5.203,56,2.496,57,1.957,58,1.957,873,5.029,878,4.877,879,4.316,882,4.316,883,4.316,884,4.954,885,4.954]],["title/injectables/PaymentService.html",[87,0.9,878,2.53]],["body/injectables/PaymentService.html",[3,0.107,4,0.094,5,0.094,7,0.603,8,1.34,11,0.013,12,0.911,14,0.956,15,1.349,16,0.43,17,0.477,20,0.107,21,0.163,22,1.098,24,0.956,26,0.008,27,0.008,55,2.608,87,1.168,88,1.468,103,1.487,104,1.34,105,0.98,106,1.251,128,1.892,137,2.473,141,1.589,160,2.683,170,1.728,171,1.589,172,1.728,174,2.574,179,1.728,203,1.806,250,1.728,253,2.785,254,1.728,257,1.806,264,1.487,277,1.361,293,1.361,312,3.005,320,2.686,322,2.686,329,3.216,340,2.323,394,4.54,418,2.207,535,2.922,559,3.237,631,4.386,877,3.237,878,3.284,886,3.237,887,3.716,888,3.716,889,6.019,890,5.211,891,3.716,892,3.716,893,5.211,894,3.716]],["title/classes/RegisterDto.html",[21,0.176,100,2.699]],["body/classes/RegisterDto.html",[3,0.136,4,0.119,5,0.119,7,0.769,10,1.611,11,0.013,12,1.26,15,1.714,16,0.439,20,0.136,21,0.269,26,0.01,27,0.01,100,4.126,104,1.751,105,1.354,106,1.473,219,6.662,222,4.045,233,5.354,259,1.305,292,2.53,582,2.735,610,2.663,895,4.124,896,5.932,897,4.734,898,4.734,899,4.734,900,4.734]],["title/classes/SignInDto.html",[21,0.176,108,2.699]],["body/classes/SignInDto.html",[3,0.144,4,0.126,5,0.126,7,0.815,10,2.168,11,0.013,12,1.114,15,1.65,16,0.359,20,0.144,21,0.279,26,0.01,27,0.01,105,1.197,108,4.282,222,4.157,233,5.503,259,1.383,582,2.839,610,2.822,627,6.097,896,5.549,901,6.097,902,4.371,903,5.018,904,5.018,905,5.018,906,5.018,907,6.37]],["title/classes/UpdateChapterDto.html",[21,0.176,282,2.699]],["body/classes/UpdateChapterDto.html",[3,0.162,4,0.142,5,0.142,11,0.013,16,0.49,20,0.162,21,0.247,26,0.011,27,0.011,259,1.555,264,1.61,269,3.556,282,4.607,294,4.438,581,4.438,657,4.071,908,4.917,909,6.853,910,3.556,911,3.353,912,3.353]],["title/classes/UpdateCourseDto.html",[21,0.176,453,2.699]],["body/classes/UpdateCourseDto.html",[3,0.162,4,0.142,5,0.142,11,0.013,16,0.49,20,0.162,21,0.247,26,0.011,27,0.011,259,1.555,264,1.61,434,3.556,453,4.607,468,4.438,592,4.438,657,4.071,910,3.556,911,3.353,912,3.353,913,4.917,914,6.853]],["title/classes/UpdateFolderDto.html",[21,0.176,673,2.699]],["body/classes/UpdateFolderDto.html",[3,0.162,4,0.142,5,0.142,11,0.013,16,0.49,20,0.162,21,0.247,26,0.011,27,0.011,259,1.555,264,1.61,599,3.556,601,4.438,657,4.071,673,4.607,677,4.438,910,3.556,911,3.353,912,3.353,915,4.917,916,6.853]],["title/classes/UpdateLearningDto.html",[21,0.176,770,2.699]],["body/classes/UpdateLearningDto.html",[3,0.162,4,0.142,5,0.142,11,0.013,16,0.49,20,0.162,21,0.247,26,0.011,27,0.011,259,1.555,264,1.61,612,3.556,614,4.438,657,4.071,770,4.607,774,4.438,910,3.556,911,3.353,912,3.353,917,4.917,918,6.853]],["title/classes/UpdateNoteDto.html",[21,0.176,838,2.699]],["body/classes/UpdateNoteDto.html",[3,0.162,4,0.142,5,0.142,11,0.013,16,0.49,20,0.162,21,0.247,26,0.011,27,0.011,259,1.555,264,1.61,615,3.556,617,4.438,657,4.071,838,4.607,842,4.438,910,3.556,911,3.353,912,3.353,919,4.917,920,6.853]],["title/classes/UpdateNotebookDto.html",[21,0.176,805,2.699]],["body/classes/UpdateNotebookDto.html",[3,0.162,4,0.142,5,0.142,11,0.013,16,0.49,20,0.162,21,0.247,26,0.011,27,0.011,259,1.555,264,1.61,628,3.556,630,4.438,657,4.071,805,4.607,809,4.438,910,3.556,911,3.353,912,3.353,921,4.917,922,6.853]],["title/modules/UsersModule.html",[28,0.869,53,2.53]],["body/modules/UsersModule.html",[3,0.141,4,0.124,5,0.124,11,0.013,16,0.449,17,0.63,20,0.141,21,0.215,26,0.01,27,0.01,28,1.5,30,1.734,31,1.799,32,1.941,33,1.941,34,1.799,35,2.635,36,2.738,53,4.947,56,2.483,57,1.941,58,1.941,200,5.161,923,4.28,924,4.28,925,4.28,926,4.913,927,4.913]],["title/injectables/UsersService.html",[87,0.9,200,2.53]],["body/injectables/UsersService.html",[3,0.119,4,0.104,5,0.104,7,0.671,8,1.443,11,0.013,12,1.113,14,1.443,15,1.427,16,0.455,17,0.531,20,0.119,21,0.181,22,1.221,24,1.443,26,0.009,27,0.009,55,2.695,87,1.257,88,1.633,103,1.816,104,1.638,105,1.197,106,1.529,137,3.024,141,1.768,200,3.534,203,2.727,222,3.332,250,1.923,254,1.923,264,1.6,265,2.5,291,2.605,292,2.209,329,2.209,928,3.602,929,4.134,930,5.609,931,6.367,932,4.134,933,5.609,934,5.609,935,4.134,936,4.134,937,4.134]],["title/classes/Video.html",[21,0.176,406,2.385]],["body/classes/Video.html",[3,0.129,4,0.113,5,0.113,7,0.731,10,2.02,11,0.013,12,1.235,15,1.583,16,0.322,20,0.17,21,0.291,26,0.01,27,0.01,105,1.328,259,1.24,274,2.411,330,3.55,340,2.005,406,3.946,554,3.252,555,5.223,574,5.223,582,2.645,608,5.929,610,2.53,644,2.835,645,5.773,646,3.537,649,5.787,650,3.537,938,4.499,939,4.499,940,4.499,941,4.499]],["title/controllers/VideosController.html",[0,1.069,942,2.902]],["body/controllers/VideosController.html",[0,1.302,2,1.302,3,0.14,4,0.123,5,0.123,11,0.013,16,0.522,17,0.628,20,0.14,21,0.214,22,1.445,24,1.258,26,0.01,27,0.01,95,2.275,114,3.047,115,3.191,123,2.491,152,3.525,270,3.349,293,1.792,554,3.536,644,4.596,942,4.531,943,4.262,944,4.358,945,4.262,946,4.262,947,4.892,948,4.892,949,4.892,950,4.892,951,4.892]],["title/modules/VideosModule.html",[28,0.869,54,2.699]],["body/modules/VideosModule.html",[2,1.682,3,0.142,4,0.125,5,0.125,11,0.013,16,0.498,17,0.636,20,0.142,21,0.217,26,0.01,27,0.01,28,1.506,30,1.748,31,1.814,32,1.957,33,1.957,34,1.814,35,2.645,36,1.957,54,5.203,56,2.496,57,1.957,58,1.957,942,5.029,944,4.877,945,4.316,952,4.316,953,4.316,954,4.954,955,4.954]],["title/injectables/VideosService.html",[87,0.9,944,2.53]],["body/injectables/VideosService.html",[3,0.106,4,0.093,5,0.093,11,0.014,12,0.646,15,0.827,16,0.429,17,0.474,20,0.106,21,0.162,22,1.091,24,0.95,26,0.008,27,0.008,55,2.603,87,1.163,88,1.459,103,1.053,104,0.95,105,0.694,106,0.887,137,1.517,141,1.579,160,2.312,170,2.79,171,2.219,172,1.717,174,1.579,179,1.717,208,3.269,250,1.717,253,2.772,254,1.717,257,2.916,264,1.053,277,1.352,293,1.352,312,2.132,318,4.079,320,2.669,329,1.973,406,3.082,418,3.563,644,3.779,871,3.217,944,3.269,946,3.217,956,3.217,957,3.693,958,3.693,959,3.693,960,3.693,961,3.693,962,3.693,963,5.188,964,3.693,965,3.693,966,3.693]],["title/coverage.html",[967,4.323]],["body/coverage.html",[0,1.877,1,1.546,5,0.054,6,1.863,11,0.013,18,1.348,21,0.34,26,0.006,27,0.006,34,0.783,55,0.783,86,1.203,87,1.621,89,1.863,93,1.546,94,1.863,100,1.438,105,0.402,108,1.438,117,1.348,133,1.682,134,1.546,136,1.863,158,1.682,171,0.915,198,1.863,200,1.348,234,1.546,235,1.863,241,1.348,249,1.863,258,1.271,260,1.863,261,1.546,262,1.863,269,1.348,282,1.438,289,1.348,310,1.863,343,1.546,344,1.863,350,1.348,360,1.863,365,1.546,366,1.863,370,1.438,377,1.348,391,1.863,406,1.271,418,1.271,419,1.863,420,1.546,421,1.863,434,1.348,453,1.438,466,1.348,509,1.863,580,1.863,581,2.701,586,1.863,587,1.863,591,1.863,592,2.701,599,1.348,600,1.863,601,2.701,612,1.348,613,1.863,614,2.701,615,1.348,616,1.863,617,2.701,628,1.348,629,1.863,630,2.701,631,1.438,632,1.863,633,1.863,644,1.348,645,2.701,646,2.701,656,1.863,662,1.438,663,1.863,664,1.546,665,1.863,673,1.438,675,1.348,692,1.863,703,1.546,704,1.863,760,1.438,761,1.863,762,1.546,763,1.863,770,1.438,772,1.348,785,1.863,794,1.546,795,1.863,796,1.438,797,1.863,798,1.546,799,1.863,805,1.438,807,1.348,820,1.863,826,1.546,827,1.863,838,1.438,840,1.348,855,1.863,873,1.546,874,1.863,878,1.348,886,1.863,895,1.863,901,1.863,902,1.863,908,1.863,913,1.863,915,1.863,917,1.863,919,1.863,921,1.863,928,1.863,942,1.546,943,1.863,944,1.348,956,1.863,967,1.682,968,2.139,969,2.139,970,2.139,971,8.267,972,6.058,973,6.058,974,2.993,975,3.436,976,7.448,977,5.399,978,4.929,979,5.399,980,6.298,981,2.139,982,2.139,983,2.139,984,1.863,985,2.139,986,2.139,987,2.139,988,2.139]],["title/dependencies.html",[31,1.77,989,2.913]],["body/dependencies.html",[11,0.013,17,0.641,21,0.278,26,0.01,27,0.01,31,1.83,72,4.352,73,4.352,123,2.544,156,3.359,157,3.928,207,4.352,292,2.67,470,4.995,610,2.81,729,4.352,730,4.352,911,2.968,912,2.968,990,6.985,991,4.996,992,6.353,993,4.996,994,4.996,995,4.996,996,4.996,997,4.996,998,4.996,999,4.996,1000,4.996,1001,4.996,1002,4.996,1003,4.996,1004,4.996,1005,4.996,1006,4.996]],["title/miscellaneous/functions.html",[1007,2.417,1008,4.211]],["body/miscellaneous/functions.html",[7,1.009,11,0.012,26,0.012,27,0.012,34,2.815,984,5.411,1007,4.49,1008,5.411,1009,6.212]],["title/index.html",[7,0.543,1010,3.344,1011,3.344]],["body/index.html",[4,0.107,11,0.013,26,0.009,27,0.009,74,3.075,539,3.075,705,3.706,744,4.982,967,3.345,1012,4.254,1013,4.254,1014,5.719,1015,4.254,1016,4.254,1017,4.254,1018,4.254,1019,4.254,1020,6.46,1021,4.254,1022,4.254,1023,4.254,1024,4.254,1025,6.46,1026,7.583,1027,4.254,1028,4.254,1029,4.254,1030,7.422,1031,4.254,1032,4.254,1033,5.719,1034,4.254,1035,4.254,1036,4.254,1037,4.254,1038,5.719,1039,4.254,1040,4.254,1041,4.254,1042,5.719,1043,5.719,1044,4.254,1045,4.254,1046,4.254,1047,4.254,1048,4.254,1049,3.706,1050,4.254,1051,4.254,1052,4.254,1053,4.254,1054,4.254,1055,4.254,1056,4.254,1057,4.254,1058,4.254,1059,3.706,1060,4.254,1061,4.254,1062,4.254,1063,4.254,1064,4.254,1065,4.254,1066,3.706]],["title/modules.html",[30,1.941]],["body/modules.html",[11,0.01,26,0.01,27,0.01,29,3.252,30,1.588,40,3.024,41,3.024,42,3.024,43,3.024,44,3.024,45,3.024,46,3.024,47,3.024,48,3.024,49,3.024,50,3.024,51,3.024,52,3.024,53,2.835,54,3.024,1049,7.15,1067,8.207,1068,8.207,1069,8.238,1070,4.499,1071,4.499]],["title/overview.html",[1072,4.79]],["body/overview.html",[2,0.715,11,0.013,18,3.143,26,0.007,27,0.007,28,0.582,29,5.934,30,0.948,31,0.984,32,1.062,33,1.062,34,0.984,35,1.022,36,1.062,37,2.341,38,2.341,39,2.341,40,4.439,41,4.046,42,4.046,43,4.046,44,4.046,45,4.046,46,4.266,47,4.046,48,3.353,49,4.046,50,4.046,51,4.046,52,4.046,53,4.16,54,4.046,55,2.494,56,1.623,57,1.062,58,1.062,88,1.062,117,3.143,133,2.113,182,2.341,183,2.341,200,4.16,241,3.143,245,2.341,246,2.341,259,0.74,289,3.143,306,2.341,307,2.341,325,2.341,350,3.143,356,2.341,357,2.341,377,3.143,387,2.341,388,2.341,466,3.143,491,2.341,492,2.341,651,2.341,653,2.341,675,3.143,688,2.341,689,2.341,772,3.143,781,2.341,782,2.341,807,3.143,816,2.341,817,2.341,840,3.143,851,2.341,852,2.341,878,3.143,882,2.341,883,2.341,923,2.341,924,2.341,925,2.341,944,3.143,952,2.341,953,2.341,1072,2.341,1073,2.687,1074,2.687,1075,2.687,1076,2.687]],["title/properties.html",[582,2.155,989,2.913]],["body/properties.html",[11,0.013,26,0.012,27,0.012,539,4.42,582,2.725,1059,5.327,1066,5.327,1077,6.115,1078,6.115,1079,6.115]],["title/miscellaneous/variables.html",[1007,2.417,1080,4.211]],["body/miscellaneous/variables.html",[7,0.93,11,0.013,15,1.283,26,0.011,27,0.011,86,3.888,105,1.077,128,2.916,158,5.436,161,4.989,571,4.998,650,5.436,974,4.989,1007,4.14,1080,4.989,1081,6.914,1082,5.727]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1078,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":325,"title":{},"body":{"injectables/ChaptersService.html":{},"overview.html":{}}}],["1.4.6",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["10.0.0",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["10.3.3",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1074,"title":{},"body":{"overview.html":{}}}],["14",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1075,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1073,"title":{},"body":{"overview.html":{}}}],["2/14",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1076,"title":{},"body":{"overview.html":{}}}],["2days",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.1",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["5.8.1",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":501,"title":{},"body":{"modules/CoursesModule.html":{}}}],["_count",{"_index":560,"title":{},"body":{"injectables/CoursesService.html":{}}}],["_sum",{"_index":558,"title":{},"body":{"injectables/CoursesService.html":{}}}],["access_token",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":337,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"injectables/NotesService.html":{}}}],["adds",{"_index":792,"title":{},"body":{"injectables/LearningService.html":{},"injectables/NotebookService.html":{}}}],["already",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":1050,"title":{},"body":{"index.html":{}}}],["amount",{"_index":559,"title":{},"body":{"injectables/CoursesService.html":{},"injectables/PaymentService.html":{}}}],["app",{"_index":1028,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1019,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asc",{"_index":339,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CoursesService.html":{}}}],["async",{"_index":137,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["auth",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.decorator",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["auth.guard",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":93,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":134,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1059,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":117,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1071,"title":{},"body":{"modules.html":{}}}],["await",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["backers",{"_index":1051,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(signindto.password",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(registerdto.password",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":181,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChaptersController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{}}}],["body.completed",{"_index":758,"title":{},"body":{"classes/Gateway.html":{}}}],["body.content",{"_index":749,"title":{},"body":{"classes/Gateway.html":{}}}],["body.id",{"_index":740,"title":{},"body":{"classes/Gateway.html":{}}}],["body.idvideo",{"_index":747,"title":{},"body":{"classes/Gateway.html":{}}}],["body.timelearned",{"_index":757,"title":{},"body":{"classes/Gateway.html":{}}}],["body.title",{"_index":748,"title":{},"body":{"classes/Gateway.html":{}}}],["body.videoid",{"_index":756,"title":{},"body":{"classes/Gateway.html":{}}}],["boolean",{"_index":753,"title":{},"body":{"classes/Gateway.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1069,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1067,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1015,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":138,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":146,"title":{},"body":{"guards/AuthGuard.html":{}}}],["card_number",{"_index":634,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["catch",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["categories",{"_index":255,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category",{"_index":236,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CoursesService.html":{}}}],["category.controller",{"_index":248,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category.service",{"_index":242,"title":{},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["category/category.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["categorycontroller",{"_index":234,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categoryid",{"_index":537,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateCourseDto.html":{}}}],["categorymodule",{"_index":41,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryservice",{"_index":241,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["cb",{"_index":505,"title":{},"body":{"modules/CoursesModule.html":{}}}],["cb(null",{"_index":506,"title":{},"body":{"modules/CoursesModule.html":{}}}],["chapter",{"_index":258,"title":{"classes/Chapter.html":{}},"body":{"classes/Chapter.html":{},"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"coverage.html":{}}}],["chapter.dto",{"_index":294,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"classes/UpdateChapterDto.html":{}}}],["chapter.dto.ts",{"_index":581,"title":{},"body":{"classes/CreateChapterDto.html":{},"classes/UpdateChapterDto.html":{},"coverage.html":{}}}],["chapter.dto.ts:2",{"_index":585,"title":{},"body":{"classes/CreateChapterDto.html":{}}}],["chapter.dto.ts:3",{"_index":583,"title":{},"body":{"classes/CreateChapterDto.html":{}}}],["chapter.dto.ts:4",{"_index":584,"title":{},"body":{"classes/CreateChapterDto.html":{}}}],["chapterid",{"_index":574,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateVideoDto.html":{},"classes/Video.html":{}}}],["chapters",{"_index":263,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"injectables/CoursesService.html":{}}}],["chapters.controller",{"_index":309,"title":{},"body":{"modules/ChaptersModule.html":{}}}],["chapters.service",{"_index":290,"title":{},"body":{"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{}}}],["chapters/chapters.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["chapterscontroller",{"_index":261,"title":{"controllers/ChaptersController.html":{}},"body":{"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"coverage.html":{}}}],["chaptersmodule",{"_index":42,"title":{"modules/ChaptersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChaptersModule.html":{},"modules.html":{},"overview.html":{}}}],["chaptersservice",{"_index":289,"title":{"injectables/ChaptersService.html":{}},"body":{"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"coverage.html":{},"overview.html":{}}}],["chart",{"_index":345,"title":{},"body":{"controllers/ChartController.html":{}}}],["chart.controller",{"_index":359,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.service",{"_index":351,"title":{},"body":{"controllers/ChartController.html":{},"modules/ChartModule.html":{}}}],["chart/chart.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["chartcontroller",{"_index":343,"title":{"controllers/ChartController.html":{}},"body":{"controllers/ChartController.html":{},"modules/ChartModule.html":{},"coverage.html":{}}}],["chartmodule",{"_index":43,"title":{"modules/ChartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChartModule.html":{},"modules.html":{},"overview.html":{}}}],["chartservice",{"_index":350,"title":{"injectables/ChartService.html":{}},"body":{"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":960,"title":{},"body":{"injectables/VideosService.html":{}}}],["children",{"_index":417,"title":{},"body":{"injectables/CommentService.html":{},"injectables/FoldersService.html":{}}}],["class",{"_index":21,"title":{"classes/Chapter.html":{},"classes/Course.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"classes/Folder.html":{},"classes/Gateway.html":{},"classes/Learning.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"classes/Video.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":259,"title":{},"body":{"classes/Chapter.html":{},"classes/Course.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"classes/Folder.html":{},"classes/Gateway.html":{},"classes/Learning.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"classes/Video.html":{},"overview.html":{}}}],["client",{"_index":713,"title":{},"body":{"classes/Gateway.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":245,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_providers",{"_index":246,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_chaptersmodule",{"_index":306,"title":{},"body":{"modules/ChaptersModule.html":{},"overview.html":{}}}],["cluster_chaptersmodule_providers",{"_index":307,"title":{},"body":{"modules/ChaptersModule.html":{},"overview.html":{}}}],["cluster_chartmodule",{"_index":356,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_providers",{"_index":357,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_commentmodule",{"_index":387,"title":{},"body":{"modules/CommentModule.html":{},"overview.html":{}}}],["cluster_commentmodule_providers",{"_index":388,"title":{},"body":{"modules/CommentModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":491,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":492,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":651,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":653,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":652,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["cluster_foldersmodule",{"_index":688,"title":{},"body":{"modules/FoldersModule.html":{},"overview.html":{}}}],["cluster_foldersmodule_providers",{"_index":689,"title":{},"body":{"modules/FoldersModule.html":{},"overview.html":{}}}],["cluster_learningmodule",{"_index":781,"title":{},"body":{"modules/LearningModule.html":{},"overview.html":{}}}],["cluster_learningmodule_providers",{"_index":782,"title":{},"body":{"modules/LearningModule.html":{},"overview.html":{}}}],["cluster_notebookmodule",{"_index":816,"title":{},"body":{"modules/NotebookModule.html":{},"overview.html":{}}}],["cluster_notebookmodule_providers",{"_index":817,"title":{},"body":{"modules/NotebookModule.html":{},"overview.html":{}}}],["cluster_notesmodule",{"_index":851,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_notesmodule_providers",{"_index":852,"title":{},"body":{"modules/NotesModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":882,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_providers",{"_index":883,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":923,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":924,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":925,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_videosmodule",{"_index":952,"title":{},"body":{"modules/VideosModule.html":{},"overview.html":{}}}],["cluster_videosmodule_providers",{"_index":953,"title":{},"body":{"modules/VideosModule.html":{},"overview.html":{}}}],["comment",{"_index":367,"title":{},"body":{"controllers/CommentController.html":{}}}],["comment.controller",{"_index":390,"title":{},"body":{"modules/CommentModule.html":{}}}],["comment.dto",{"_index":379,"title":{},"body":{"controllers/CommentController.html":{},"injectables/CommentService.html":{}}}],["comment.dto.ts",{"_index":587,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["comment.dto.ts:2",{"_index":590,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.dto.ts:3",{"_index":588,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.dto.ts:4",{"_index":589,"title":{},"body":{"classes/CreateCommentDto.html":{}}}],["comment.service",{"_index":378,"title":{},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{}}}],["comment/comment.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["commentcontroller",{"_index":365,"title":{"controllers/CommentController.html":{}},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{},"coverage.html":{}}}],["commentmodule",{"_index":44,"title":{"modules/CommentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommentModule.html":{},"modules.html":{},"overview.html":{}}}],["commentservice",{"_index":377,"title":{"injectables/CommentService.html":{}},"body":{"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"coverage.html":{},"overview.html":{}}}],["completed",{"_index":752,"title":{},"body":{"classes/Gateway.html":{}}}],["condition",{"_index":166,"title":{},"body":{"guards/AuthGuard.html":{}}}],["connect",{"_index":405,"title":{},"body":{"injectables/CommentService.html":{},"classes/Gateway.html":{}}}],["connected",{"_index":737,"title":{},"body":{"classes/Gateway.html":{}}}],["connectedsocket",{"_index":725,"title":{},"body":{"classes/Gateway.html":{}}}],["console.log('create",{"_index":959,"title":{},"body":{"injectables/VideosService.html":{}}}],["console.log('internal",{"_index":966,"title":{},"body":{"injectables/VideosService.html":{}}}],["console.log('not",{"_index":962,"title":{},"body":{"injectables/VideosService.html":{}}}],["console.log('request",{"_index":949,"title":{},"body":{"controllers/VideosController.html":{}}}],["console.log(error",{"_index":412,"title":{},"body":{"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{}}}],["console.log(socket.id",{"_index":736,"title":{},"body":{"classes/Gateway.html":{}}}],["console.log(test",{"_index":750,"title":{},"body":{"classes/Gateway.html":{}}}],["const",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["constructor",{"_index":141,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["constructor(databaseservice",{"_index":250,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["constructor(jwtservice",{"_index":142,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["constructor(usersservice",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["content",{"_index":403,"title":{},"body":{"injectables/CommentService.html":{},"classes/CreateCommentDto.html":{},"classes/CreateNoteDto.html":{},"classes/Gateway.html":{}}}],["context",{"_index":149,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.getclass",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.gethandler",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/ChaptersController.html":{},"controllers/ChartController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/ChaptersController.html":{},"controllers/ChartController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('category",{"_index":243,"title":{},"body":{"controllers/CategoryController.html":{}}}],["controller('chapters",{"_index":295,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["controller('chart",{"_index":352,"title":{},"body":{"controllers/ChartController.html":{}}}],["controller('comment",{"_index":380,"title":{},"body":{"controllers/CommentController.html":{}}}],["controller('courses",{"_index":471,"title":{},"body":{"controllers/CoursesController.html":{}}}],["controller('folders",{"_index":679,"title":{},"body":{"controllers/FoldersController.html":{}}}],["controller('learning",{"_index":775,"title":{},"body":{"controllers/LearningController.html":{}}}],["controller('notebook",{"_index":810,"title":{},"body":{"controllers/NotebookController.html":{}}}],["controller('notes",{"_index":843,"title":{},"body":{"controllers/NotesController.html":{}}}],["controller('payment",{"_index":880,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('videos",{"_index":947,"title":{},"body":{"controllers/VideosController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["cookie",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["cors",{"_index":732,"title":{},"body":{"classes/Gateway.html":{}}}],["counttotalincome",{"_index":423,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["counttotalincome(@req",{"_index":480,"title":{},"body":{"controllers/CoursesController.html":{}}}],["counttotalincome(courseid",{"_index":513,"title":{},"body":{"injectables/CoursesService.html":{}}}],["counttotalincome(req",{"_index":430,"title":{},"body":{"controllers/CoursesController.html":{}}}],["course",{"_index":418,"title":{"classes/Course.html":{}},"body":{"injectables/CommentService.html":{},"classes/Course.html":{},"injectables/CoursesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["course.dto",{"_index":468,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/UpdateCourseDto.html":{}}}],["course.dto.ts",{"_index":592,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["course.dto.ts:2",{"_index":598,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:3",{"_index":593,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:4",{"_index":597,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:5",{"_index":594,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:6",{"_index":595,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.dto.ts:7",{"_index":596,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["course.price",{"_index":892,"title":{},"body":{"injectables/PaymentService.html":{}}}],["coursecreate",{"_index":327,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["coursecreate.chapters[0",{"_index":335,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["coursedelete",{"_index":578,"title":{},"body":{"injectables/CoursesService.html":{}}}],["coursedetail",{"_index":563,"title":{},"body":{"injectables/CoursesService.html":{}}}],["courseid",{"_index":340,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateVideoDto.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"classes/Video.html":{}}}],["courseres",{"_index":319,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["courseres.chapters.length",{"_index":324,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["courses",{"_index":422,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["courses.controller",{"_index":494,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":467,"title":{},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":420,"title":{"controllers/CoursesController.html":{}},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["coursesmodule",{"_index":45,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":466,"title":{"injectables/CoursesService.html":{}},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"coverage.html":{},"overview.html":{}}}],["courseupdate",{"_index":568,"title":{},"body":{"injectables/CoursesService.html":{}}}],["coverage",{"_index":967,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":264,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["create(@body",{"_index":296,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{}}}],["create(@req",{"_index":948,"title":{},"body":{"controllers/VideosController.html":{}}}],["create(body",{"_index":369,"title":{},"body":{"controllers/CommentController.html":{},"controllers/PaymentController.html":{}}}],["create(createchapterdto",{"_index":268,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{}}}],["create(createcoursedto",{"_index":433,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["create(createfolderdto",{"_index":667,"title":{},"body":{"controllers/FoldersController.html":{},"injectables/FoldersService.html":{}}}],["create(createlearningdto",{"_index":764,"title":{},"body":{"controllers/LearningController.html":{},"injectables/LearningService.html":{}}}],["create(createnotebookdto",{"_index":800,"title":{},"body":{"controllers/NotebookController.html":{},"injectables/NotebookService.html":{}}}],["create(createnotedto",{"_index":830,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["create(data",{"_index":394,"title":{},"body":{"injectables/CommentService.html":{},"injectables/PaymentService.html":{}}}],["create(usercreateinput",{"_index":930,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(uuid",{"_index":958,"title":{},"body":{"injectables/VideosService.html":{}}}],["createchapterdto",{"_index":269,"title":{"classes/CreateChapterDto.html":{}},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"classes/CreateChapterDto.html":{},"classes/UpdateChapterDto.html":{},"coverage.html":{}}}],["createchapterdto.courseid",{"_index":321,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["createchapterdto.sequencenumber",{"_index":326,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["createchapterdto.title",{"_index":331,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["createcommentdto",{"_index":370,"title":{"classes/CreateCommentDto.html":{}},"body":{"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":434,"title":{"classes/CreateCourseDto.html":{}},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDto.html":{},"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["createcoursedto.description",{"_index":540,"title":{},"body":{"injectables/CoursesService.html":{}}}],["createcoursedto.image",{"_index":542,"title":{},"body":{"injectables/CoursesService.html":{}}}],["createcoursedto.title",{"_index":534,"title":{},"body":{"injectables/CoursesService.html":{}}}],["createcoursedto.uuid",{"_index":546,"title":{},"body":{"injectables/CoursesService.html":{}}}],["createdat",{"_index":416,"title":{},"body":{"injectables/CommentService.html":{},"injectables/CoursesService.html":{}}}],["createdcomment",{"_index":409,"title":{},"body":{"injectables/CommentService.html":{}}}],["createdfolder",{"_index":700,"title":{},"body":{"injectables/FoldersService.html":{}}}],["createfolderdto",{"_index":599,"title":{"classes/CreateFolderDto.html":{}},"body":{"classes/CreateFolderDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/UpdateFolderDto.html":{},"coverage.html":{}}}],["createlearningdto",{"_index":612,"title":{"classes/CreateLearningDto.html":{}},"body":{"classes/CreateLearningDto.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"classes/UpdateLearningDto.html":{},"coverage.html":{}}}],["createnotebookdto",{"_index":628,"title":{"classes/CreateNotebookDto.html":{}},"body":{"classes/CreateNotebookDto.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"classes/UpdateNotebookDto.html":{},"coverage.html":{}}}],["createnotedto",{"_index":615,"title":{"classes/CreateNoteDto.html":{}},"body":{"classes/CreateNoteDto.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["createnotedto.courseid",{"_index":863,"title":{},"body":{"injectables/NotesService.html":{}}}],["createnotedto.uuid",{"_index":865,"title":{},"body":{"injectables/NotesService.html":{}}}],["createpaymentdto",{"_index":631,"title":{"classes/CreatePaymentDto.html":{}},"body":{"classes/CreatePaymentDto.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["createvideodto",{"_index":644,"title":{"classes/CreateVideoDto.html":{}},"body":{"classes/CreateVideoDto.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["createvideodto.courseid",{"_index":961,"title":{},"body":{"injectables/VideosService.html":{}}}],["createvideodto.videos",{"_index":965,"title":{},"body":{"injectables/VideosService.html":{}}}],["cvv",{"_index":635,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["data",{"_index":329,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["data.content",{"_index":404,"title":{},"body":{"injectables/CommentService.html":{}}}],["data.foreach(async",{"_index":570,"title":{},"body":{"injectables/CoursesService.html":{}}}],["data.id_course",{"_index":889,"title":{},"body":{"injectables/PaymentService.html":{}}}],["data.parentid",{"_index":402,"title":{},"body":{"injectables/CommentService.html":{}}}],["data.videoid",{"_index":407,"title":{},"body":{"injectables/CommentService.html":{}}}],["database.service",{"_index":655,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["database/database.service",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":46,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseservice",{"_index":55,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{},"coverage.html":{},"overview.html":{}}}],["datacreate",{"_index":400,"title":{},"body":{"injectables/CommentService.html":{}}}],["date.now",{"_index":507,"title":{},"body":{"modules/CoursesModule.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/ChaptersController.html":{},"controllers/ChartController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"controllers/FoldersController.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/Video.html":{}}}],["default",{"_index":650,"title":{},"body":{"classes/CreateVideoDto.html":{},"classes/Video.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"injectables/DatabaseService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"injectables/VideosService.html":{}}}],["delete",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["delete(':id",{"_index":279,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":334,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CommentService.html":{}}}],["description",{"_index":539,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateCourseDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":500,"title":{},"body":{"modules/CoursesModule.html":{}}}],["development",{"_index":1029,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":496,"title":{},"body":{"modules/CoursesModule.html":{}}}],["documentation",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":293,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["dto/register.dto",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/sign",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":678,"title":{},"body":{"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["duration",{"_index":555,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateVideoDto.html":{},"classes/Video.html":{}}}],["e",{"_index":567,"title":{},"body":{"injectables/CoursesService.html":{}}}],["e2e",{"_index":1039,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1016,"title":{},"body":{"index.html":{}}}],["email",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"classes/CreatePaymentDto.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{}}}],["enrollcreate",{"_index":893,"title":{},"body":{"injectables/PaymentService.html":{}}}],["error",{"_index":257,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["example",{"_index":1025,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":147,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exist",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiration",{"_index":636,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["expiresin",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["express",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":461,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["extends",{"_index":657,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{}}}],["extracttokenfromheader",{"_index":140,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotesService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["file.filename",{"_index":551,"title":{},"body":{"injectables/CoursesService.html":{}}}],["file.originalname",{"_index":508,"title":{},"body":{"modules/CoursesModule.html":{}}}],["fileinterceptor",{"_index":469,"title":{},"body":{"controllers/CoursesController.html":{}}}],["filename",{"_index":504,"title":{},"body":{"modules/CoursesModule.html":{}}}],["find",{"_index":519,"title":{},"body":{"injectables/CoursesService.html":{}}}],["findall",{"_index":237,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["findall(@req",{"_index":681,"title":{},"body":{"controllers/FoldersController.html":{},"controllers/NotesController.html":{}}}],["findall(req",{"_index":669,"title":{},"body":{"controllers/FoldersController.html":{},"controllers/NotesController.html":{}}}],["findall(uuid",{"_index":695,"title":{},"body":{"injectables/FoldersService.html":{},"injectables/NotesService.html":{}}}],["findall(videoid",{"_index":396,"title":{},"body":{"injectables/CommentService.html":{}}}],["findbycourse",{"_index":392,"title":{},"body":{"injectables/CommentService.html":{}}}],["findbycourse(courseid",{"_index":398,"title":{},"body":{"injectables/CommentService.html":{}}}],["findbyuuid",{"_index":424,"title":{},"body":{"controllers/CoursesController.html":{}}}],["findbyuuid(@req",{"_index":474,"title":{},"body":{"controllers/CoursesController.html":{}}}],["findbyuuid(req",{"_index":438,"title":{},"body":{"controllers/CoursesController.html":{}}}],["findbyuuidteacher",{"_index":425,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["findbyuuidteacher(@req",{"_index":478,"title":{},"body":{"controllers/CoursesController.html":{}}}],["findbyuuidteacher(req",{"_index":441,"title":{},"body":{"controllers/CoursesController.html":{}}}],["findbyuuidteacher(uuid",{"_index":517,"title":{},"body":{"injectables/CoursesService.html":{}}}],["findbyuuiduser",{"_index":510,"title":{},"body":{"injectables/CoursesService.html":{}}}],["findbyuuiduser(uuid",{"_index":521,"title":{},"body":{"injectables/CoursesService.html":{}}}],["findenrollment",{"_index":346,"title":{},"body":{"controllers/ChartController.html":{},"injectables/ChartService.html":{}}}],["findenrollment(@param('id",{"_index":354,"title":{},"body":{"controllers/ChartController.html":{}}}],["findenrollment(id",{"_index":347,"title":{},"body":{"controllers/ChartController.html":{},"injectables/ChartService.html":{}}}],["findone",{"_index":265,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":300,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["findone(email",{"_index":934,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(id",{"_index":273,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["findone(idvideo",{"_index":767,"title":{},"body":{"controllers/LearningController.html":{},"injectables/LearningService.html":{}}}],["findonebyuuid",{"_index":426,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["findonebyuuid(courseid",{"_index":446,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["findonebyuuidteacher",{"_index":427,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["findonebyuuidteacher(courseid",{"_index":449,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["findonebyvideoid",{"_index":829,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["findonebyvideoid(videoid",{"_index":834,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["folder",{"_index":662,"title":{"classes/Folder.html":{}},"body":{"classes/Folder.html":{},"injectables/FoldersService.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["folder.dto",{"_index":677,"title":{},"body":{"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/UpdateFolderDto.html":{}}}],["folder.dto.ts",{"_index":601,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/UpdateFolderDto.html":{},"coverage.html":{}}}],["folder.dto.ts:11",{"_index":604,"title":{},"body":{"classes/CreateFolderDto.html":{}}}],["folder.dto.ts:4",{"_index":605,"title":{},"body":{"classes/CreateFolderDto.html":{}}}],["folder.dto.ts:7",{"_index":606,"title":{},"body":{"classes/CreateFolderDto.html":{}}}],["folder.dto.ts:8",{"_index":607,"title":{},"body":{"classes/CreateFolderDto.html":{}}}],["folder.id",{"_index":868,"title":{},"body":{"injectables/NotesService.html":{}}}],["folderid",{"_index":618,"title":{},"body":{"classes/CreateNoteDto.html":{},"injectables/NotesService.html":{}}}],["folders",{"_index":666,"title":{},"body":{"controllers/FoldersController.html":{}}}],["folders.controller",{"_index":691,"title":{},"body":{"modules/FoldersModule.html":{}}}],["folders.service",{"_index":676,"title":{},"body":{"controllers/FoldersController.html":{},"modules/FoldersModule.html":{}}}],["folders/folders.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["folderscontroller",{"_index":664,"title":{"controllers/FoldersController.html":{}},"body":{"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"coverage.html":{}}}],["foldersmodule",{"_index":47,"title":{"modules/FoldersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FoldersModule.html":{},"modules.html":{},"overview.html":{}}}],["foldersservice",{"_index":675,"title":{"injectables/FoldersService.html":{}},"body":{"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"coverage.html":{},"overview.html":{}}}],["found",{"_index":871,"title":{},"body":{"injectables/NotesService.html":{},"injectables/VideosService.html":{}}}],["framework",{"_index":1014,"title":{},"body":{"index.html":{}}}],["function",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1008,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":703,"title":{"classes/Gateway.html":{}},"body":{"classes/Gateway.html":{},"modules/GatewayModule.html":{},"coverage.html":{}}}],["gateway/gateway.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["gatewaymodule",{"_index":48,"title":{"modules/GatewayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["get('/teacher",{"_index":442,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('/teacher/:courseid",{"_index":450,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('/user",{"_index":439,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('/user/:courseid",{"_index":447,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get('/video/:videoid",{"_index":835,"title":{},"body":{"controllers/NotesController.html":{}}}],["get(':id",{"_index":275,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["get('enrollment/:id",{"_index":353,"title":{},"body":{"controllers/ChartController.html":{}}}],["get('teacher/income/:courseid",{"_index":431,"title":{},"body":{"controllers/CoursesController.html":{}}}],["get()@public",{"_index":238,"title":{},"body":{"controllers/CategoryController.html":{}}}],["getall",{"_index":368,"title":{},"body":{"controllers/CommentController.html":{}}}],["getall(videoid",{"_index":372,"title":{},"body":{"controllers/CommentController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfonote",{"_index":706,"title":{},"body":{"classes/Gateway.html":{}}}],["getinfonote(body",{"_index":712,"title":{},"body":{"classes/Gateway.html":{}}}],["getting",{"_index":1010,"title":{"index.html":{}},"body":{}}],["global",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["graph",{"_index":1070,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1046,"title":{},"body":{"index.html":{}}}],["guard",{"_index":133,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":135,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hash",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1056,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":734,"title":{},"body":{"classes/Gateway.html":{}}}],["http://localhost:3001/images/thumbnails",{"_index":548,"title":{},"body":{"injectables/CoursesService.html":{}}}],["httpcode",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":1063,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["id",{"_index":277,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["id_course",{"_index":637,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["identifier",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["idnote",{"_index":742,"title":{},"body":{"classes/Gateway.html":{}}}],["idvideo",{"_index":741,"title":{},"body":{"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{}}}],["image",{"_index":541,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateCourseDto.html":{}}}],["images",{"_index":502,"title":{},"body":{"modules/CoursesModule.html":{}}}],["implements",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DatabaseService.html":{},"classes/Gateway.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoursesModule.html":{}}}],["in.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["in.dto.ts",{"_index":902,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":906,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:6",{"_index":904,"title":{},"body":{"classes/SignInDto.html":{}}}],["include",{"_index":411,"title":{},"body":{"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"injectables/DatabaseService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{}}}],["injectable",{"_index":87,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["injectables",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{},"overview.html":{}}}],["installation",{"_index":1024,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1027,"title":{},"body":{"index.html":{}}}],["internalservererrorexception",{"_index":253,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["is_public_key",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":896,"title":{},"body":{"classes/RegisterDto.html":{},"classes/SignInDto.html":{}}}],["isemail()@isnotempty",{"_index":903,"title":{},"body":{"classes/SignInDto.html":{}}}],["isint",{"_index":626,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{}}}],["isint()@validateif((obj",{"_index":620,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["isnotempty",{"_index":627,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/SignInDto.html":{}}}],["isnumber",{"_index":608,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/CreateVideoDto.html":{},"classes/Video.html":{}}}],["isnumber()@validateif((obj",{"_index":603,"title":{},"body":{"classes/CreateFolderDto.html":{}}}],["ispublic",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":907,"title":{},"body":{"classes/SignInDto.html":{}}}],["isstring()@isnotempty",{"_index":905,"title":{},"body":{"classes/SignInDto.html":{}}}],["join",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"index.html":{}}}],["join(__dirname",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["join(thumbnail_folder_path",{"_index":550,"title":{},"body":{"injectables/CoursesService.html":{}}}],["jwtmodule",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":143,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Gateway.html":{}}}],["kamil",{"_index":1060,"title":{},"body":{"index.html":{}}}],["learning",{"_index":760,"title":{"classes/Learning.html":{}},"body":{"classes/Learning.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"coverage.html":{}}}],["learning.controller",{"_index":784,"title":{},"body":{"modules/LearningModule.html":{}}}],["learning.dto",{"_index":774,"title":{},"body":{"controllers/LearningController.html":{},"injectables/LearningService.html":{},"classes/UpdateLearningDto.html":{}}}],["learning.dto.ts",{"_index":614,"title":{},"body":{"classes/CreateLearningDto.html":{},"classes/UpdateLearningDto.html":{},"coverage.html":{}}}],["learning.service",{"_index":773,"title":{},"body":{"controllers/LearningController.html":{},"modules/LearningModule.html":{}}}],["learning/learning.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["learningcontroller",{"_index":762,"title":{"controllers/LearningController.html":{}},"body":{"controllers/LearningController.html":{},"modules/LearningModule.html":{},"coverage.html":{}}}],["learningmodule",{"_index":49,"title":{"modules/LearningModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LearningModule.html":{},"modules.html":{},"overview.html":{}}}],["learnings",{"_index":566,"title":{},"body":{"injectables/CoursesService.html":{}}}],["learningservice",{"_index":772,"title":{"injectables/LearningService.html":{}},"body":{"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["license",{"_index":1066,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1043,"title":{},"body":{"index.html":{}}}],["literal",{"_index":457,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/Gateway.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["messagebody",{"_index":726,"title":{},"body":{"classes/Gateway.html":{}}}],["metadata",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1007,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1042,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1033,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/GatewayModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/GatewayModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/GatewayModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1055,"title":{},"body":{"index.html":{}}}],["multer",{"_index":497,"title":{},"body":{"modules/CoursesModule.html":{}}}],["multermodule",{"_index":495,"title":{},"body":{"modules/CoursesModule.html":{}}}],["multermodule.register",{"_index":498,"title":{},"body":{"modules/CoursesModule.html":{}}}],["myśliwiec",{"_index":1061,"title":{},"body":{"index.html":{}}}],["name",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateFolderDto.html":{},"classes/CreatePaymentDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["nest",{"_index":1020,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1065,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Gateway.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":911,"title":{},"body":{"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":470,"title":{},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":729,"title":{},"body":{"classes/Gateway.html":{},"dependencies.html":{}}}],["new",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["newmessage",{"_index":707,"title":{},"body":{"classes/Gateway.html":{}}}],["newmessage(body",{"_index":717,"title":{},"body":{"classes/Gateway.html":{}}}],["node.js",{"_index":1013,"title":{},"body":{"index.html":{}}}],["notacceptableexception",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChaptersService.html":{},"injectables/CoursesService.html":{}}}],["notacceptableexception('email",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["note",{"_index":794,"title":{"classes/Note.html":{}},"body":{"classes/Note.html":{},"injectables/NotesService.html":{},"coverage.html":{}}}],["note.dto",{"_index":842,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/UpdateNoteDto.html":{}}}],["note.dto.ts",{"_index":617,"title":{},"body":{"classes/CreateNoteDto.html":{},"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["note.dto.ts:12",{"_index":625,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:15",{"_index":621,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:4",{"_index":623,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:5",{"_index":619,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:8",{"_index":622,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["note.dto.ts:9",{"_index":624,"title":{},"body":{"classes/CreateNoteDto.html":{}}}],["notebook",{"_index":796,"title":{"classes/Notebook.html":{}},"body":{"classes/Notebook.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"coverage.html":{}}}],["notebook.controller",{"_index":819,"title":{},"body":{"modules/NotebookModule.html":{}}}],["notebook.dto",{"_index":809,"title":{},"body":{"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"classes/UpdateNotebookDto.html":{}}}],["notebook.dto.ts",{"_index":630,"title":{},"body":{"classes/CreateNotebookDto.html":{},"classes/UpdateNotebookDto.html":{},"coverage.html":{}}}],["notebook.service",{"_index":808,"title":{},"body":{"controllers/NotebookController.html":{},"modules/NotebookModule.html":{}}}],["notebook/notebook.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["notebookcontroller",{"_index":798,"title":{"controllers/NotebookController.html":{}},"body":{"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"coverage.html":{}}}],["notebookmodule",{"_index":50,"title":{"modules/NotebookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotebookModule.html":{},"modules.html":{},"overview.html":{}}}],["notebookservice",{"_index":807,"title":{"injectables/NotebookService.html":{}},"body":{"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"coverage.html":{},"overview.html":{}}}],["notecreated",{"_index":866,"title":{},"body":{"injectables/NotesService.html":{}}}],["notes",{"_index":828,"title":{},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["notes.controller",{"_index":854,"title":{},"body":{"modules/NotesModule.html":{}}}],["notes.service",{"_index":841,"title":{},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{}}}],["notes/notes.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["notescontroller",{"_index":826,"title":{"controllers/NotesController.html":{}},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"coverage.html":{}}}],["notesmodule",{"_index":51,"title":{"modules/NotesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotesModule.html":{},"modules.html":{},"overview.html":{}}}],["notesservice",{"_index":840,"title":{"injectables/NotesService.html":{}},"body":{"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"coverage.html":{},"overview.html":{}}}],["notfoundexception",{"_index":318,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CoursesService.html":{},"injectables/VideosService.html":{}}}],["npm",{"_index":1026,"title":{},"body":{"index.html":{}}}],["null",{"_index":415,"title":{},"body":{"injectables/CommentService.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"injectables/FoldersService.html":{},"injectables/NotesService.html":{}}}],["number",{"_index":274,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/Video.html":{}}}],["number.parseint(createcoursedto.categoryid",{"_index":538,"title":{},"body":{"injectables/CoursesService.html":{}}}],["number.parseint(createcoursedto.price",{"_index":536,"title":{},"body":{"injectables/CoursesService.html":{}}}],["onmoduleinit",{"_index":659,"title":{},"body":{"injectables/DatabaseService.html":{},"classes/Gateway.html":{}}}],["open",{"_index":1044,"title":{},"body":{"index.html":{}}}],["optional",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["orderby",{"_index":333,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{}}}],["origin",{"_index":733,"title":{},"body":{"classes/Gateway.html":{}}}],["out",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["overview",{"_index":1072,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":989,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":287,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/ChartController.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["param('courseid",{"_index":476,"title":{},"body":{"controllers/CoursesController.html":{}}}],["param('id",{"_index":302,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/LearningController.html":{}}}],["param('videoid",{"_index":846,"title":{},"body":{"controllers/NotesController.html":{}}}],["parameters",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["parent",{"_index":408,"title":{},"body":{"injectables/CommentService.html":{}}}],["parentfolderid",{"_index":602,"title":{},"body":{"classes/CreateFolderDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["parentid",{"_index":414,"title":{},"body":{"injectables/CommentService.html":{},"classes/CreateCommentDto.html":{}}}],["parseintpipe",{"_index":288,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/ChartController.html":{},"controllers/CoursesController.html":{},"controllers/LearningController.html":{},"controllers/NotesController.html":{}}}],["parser",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":910,"title":{},"body":{"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{}}}],["partialtype(createchapterdto",{"_index":909,"title":{},"body":{"classes/UpdateChapterDto.html":{}}}],["partialtype(createcoursedto",{"_index":914,"title":{},"body":{"classes/UpdateCourseDto.html":{}}}],["partialtype(createfolderdto",{"_index":916,"title":{},"body":{"classes/UpdateFolderDto.html":{}}}],["partialtype(createlearningdto",{"_index":918,"title":{},"body":{"classes/UpdateLearningDto.html":{}}}],["partialtype(createnotebookdto",{"_index":922,"title":{},"body":{"classes/UpdateNotebookDto.html":{}}}],["partialtype(createnotedto",{"_index":920,"title":{},"body":{"classes/UpdateNoteDto.html":{}}}],["passthrough",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{}}}],["patch",{"_index":286,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["patch('/arrange/:id",{"_index":458,"title":{},"body":{"controllers/CoursesController.html":{}}}],["patch('/thumbnail/:id",{"_index":484,"title":{},"body":{"controllers/CoursesController.html":{}}}],["patch('/thumbnail/:id')@useinterceptors(undefined",{"_index":462,"title":{},"body":{"controllers/CoursesController.html":{}}}],["patch(':id",{"_index":284,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["path",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{}}}],["payload",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["payload.email",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.name",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.password",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.role",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["payment",{"_index":875,"title":{},"body":{"controllers/PaymentController.html":{}}}],["payment.controller",{"_index":885,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.dto",{"_index":877,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["payment.dto.ts",{"_index":633,"title":{},"body":{"classes/CreatePaymentDto.html":{},"coverage.html":{}}}],["payment.dto.ts:3",{"_index":643,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:4",{"_index":638,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:5",{"_index":641,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:6",{"_index":639,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:7",{"_index":640,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:9",{"_index":642,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.service",{"_index":879,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment/payment.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["paymentcontroller",{"_index":873,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentcreate",{"_index":890,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentmodule",{"_index":52,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentservice",{"_index":878,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":1053,"title":{},"body":{"index.html":{}}}],["post",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChaptersController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{}}}],["post('login",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/ChaptersController.html":{},"controllers/ChartController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{}}}],["price",{"_index":535,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateCourseDto.html":{},"injectables/PaymentService.html":{}}}],["prisma",{"_index":291,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"injectables/UsersService.html":{}}}],["prisma.chapterupdateinput",{"_index":283,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{}}}],["prisma.commentcreateinput",{"_index":401,"title":{},"body":{"injectables/CommentService.html":{}}}],["prisma.courseupdateinput",{"_index":454,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["prisma.usercreateinput",{"_index":931,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma.userupdateinput",{"_index":533,"title":{},"body":{"injectables/CoursesService.html":{}}}],["prisma/client",{"_index":292,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"classes/RegisterDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":658,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["private",{"_index":139,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Gateway.html":{}}}],["process.env.jwt_secret",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["production",{"_index":1035,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1012,"title":{},"body":{"index.html":{}}}],["project",{"_index":1045,"title":{},"body":{"index.html":{}}}],["promise",{"_index":150,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":582,"title":{"properties.html":{}},"body":{"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"classes/Gateway.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/Video.html":{},"properties.html":{}}}],["provide",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/GatewayModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["public",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CategoryController.html":{},"controllers/ChartController.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get",{"_index":436,"title":{},"body":{"controllers/CoursesController.html":{}}}],["public()@get(':id",{"_index":444,"title":{},"body":{"controllers/CoursesController.html":{}}}],["public()@get('enrollment/:id",{"_index":348,"title":{},"body":{"controllers/ChartController.html":{}}}],["public()@httpcode(httpstatus.ok)@post('login",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@httpcode(httpstatus.ok)@post('register",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["query",{"_index":376,"title":{},"body":{"controllers/CommentController.html":{},"controllers/FoldersController.html":{},"controllers/NotesController.html":{}}}],["query('courseid",{"_index":382,"title":{},"body":{"controllers/CommentController.html":{}}}],["query('parentfolderid",{"_index":682,"title":{},"body":{"controllers/FoldersController.html":{},"controllers/NotesController.html":{}}}],["query('videoid",{"_index":381,"title":{},"body":{"controllers/CommentController.html":{}}}],["read",{"_index":1054,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChaptersController.html":{},"controllers/ChartController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["reflect",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":144,"title":{},"body":{"guards/AuthGuard.html":{}}}],["register",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registerdto",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":100,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["remove",{"_index":266,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["remove(@param('id",{"_index":304,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["remove(id",{"_index":278,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["removes",{"_index":342,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"injectables/NotesService.html":{}}}],["repository",{"_index":1023,"title":{},"body":{"index.html":{}}}],["req",{"_index":270,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CommentController.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{}}}],["req.user['uuid",{"_index":386,"title":{},"body":{"controllers/CommentController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotesController.html":{}}}],["req['user",{"_index":950,"title":{},"body":{"controllers/VideosController.html":{}}}],["req['user'].uuid",{"_index":298,"title":{},"body":{"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/PaymentController.html":{}}}],["request",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/ChaptersController.html":{},"controllers/CoursesController.html":{},"controllers/FoldersController.html":{},"controllers/LearningController.html":{},"controllers/NotesController.html":{},"controllers/PaymentController.html":{},"controllers/VideosController.html":{}}}],["request.headers.authorization?.split",{"_index":180,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request['user",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{}}}],["res",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Gateway.html":{}}}],["res.cookie('access_token",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}],["response",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["result",{"_index":363,"title":{},"body":{"injectables/ChartService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"injectables/DatabaseService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterDto.html":{}}}],["rootpath",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1030,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["saltorrounds",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":1017,"title":{},"body":{"index.html":{}}}],["secret",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{}}}],["see",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select",{"_index":322,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/PaymentService.html":{}}}],["seq",{"_index":323,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["sequence",{"_index":487,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["sequencenumber",{"_index":332,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{}}}],["server",{"_index":705,"title":{},"body":{"classes/Gateway.html":{},"index.html":{}}}],["servestaticmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["setmetadata(is_public_key",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settimewatchvideo",{"_index":708,"title":{},"body":{"classes/Gateway.html":{}}}],["settimewatchvideo(body",{"_index":722,"title":{},"body":{"classes/Gateway.html":{}}}],["side",{"_index":1018,"title":{},"body":{"index.html":{}}}],["signin",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(signindto",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signindto",{"_index":108,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["socket",{"_index":714,"title":{},"body":{"classes/Gateway.html":{}}}],["socket.id",{"_index":739,"title":{},"body":{"classes/Gateway.html":{}}}],["socket.io",{"_index":730,"title":{},"body":{"classes/Gateway.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/Chapter.html":{},"controllers/ChaptersController.html":{},"modules/ChaptersModule.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"modules/CommentModule.html":{},"injectables/CommentService.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateLearningDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateNotebookDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/Folder.html":{},"controllers/FoldersController.html":{},"modules/FoldersModule.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"modules/GatewayModule.html":{},"classes/Learning.html":{},"controllers/LearningController.html":{},"modules/LearningModule.html":{},"injectables/LearningService.html":{},"classes/Note.html":{},"classes/Notebook.html":{},"controllers/NotebookController.html":{},"modules/NotebookModule.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"modules/NotesModule.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"index.html":{}}}],["sponsors",{"_index":1048,"title":{},"body":{"index.html":{}}}],["src/.../auth.decorator.ts",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:8",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.decorator",{"_index":240,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ChartController.html":{},"controllers/CoursesController.html":{}}}],["src/auth/auth.decorator.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.guard.ts",{"_index":136,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:13",{"_index":145,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:18",{"_index":148,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:46",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":895,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:4",{"_index":898,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:6",{"_index":897,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:7",{"_index":899,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:8",{"_index":900,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/sign",{"_index":901,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/category/category.controller.ts",{"_index":235,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/category/category.controller.ts:10",{"_index":239,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.module.ts",{"_index":247,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/category/category.service.ts",{"_index":249,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/category/category.service.ts:5",{"_index":251,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:8",{"_index":252,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/chapters/chapters.controller.ts",{"_index":262,"title":{},"body":{"controllers/ChaptersController.html":{},"coverage.html":{}}}],["src/chapters/chapters.controller.ts:22",{"_index":271,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["src/chapters/chapters.controller.ts:27",{"_index":272,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["src/chapters/chapters.controller.ts:32",{"_index":276,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["src/chapters/chapters.controller.ts:37",{"_index":285,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["src/chapters/chapters.controller.ts:45",{"_index":280,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["src/chapters/chapters.module.ts",{"_index":308,"title":{},"body":{"modules/ChaptersModule.html":{}}}],["src/chapters/chapters.service.ts",{"_index":310,"title":{},"body":{"injectables/ChaptersService.html":{},"coverage.html":{}}}],["src/chapters/chapters.service.ts:10",{"_index":311,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["src/chapters/chapters.service.ts:12",{"_index":313,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["src/chapters/chapters.service.ts:64",{"_index":314,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["src/chapters/chapters.service.ts:73",{"_index":315,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["src/chapters/chapters.service.ts:80",{"_index":317,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["src/chapters/chapters.service.ts:84",{"_index":316,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["src/chapters/dto/create",{"_index":580,"title":{},"body":{"classes/CreateChapterDto.html":{},"coverage.html":{}}}],["src/chapters/dto/update",{"_index":908,"title":{},"body":{"classes/UpdateChapterDto.html":{},"coverage.html":{}}}],["src/chapters/entities/chapter.entity.ts",{"_index":260,"title":{},"body":{"classes/Chapter.html":{},"coverage.html":{}}}],["src/chart/chart.controller.ts",{"_index":344,"title":{},"body":{"controllers/ChartController.html":{},"coverage.html":{}}}],["src/chart/chart.controller.ts:10",{"_index":349,"title":{},"body":{"controllers/ChartController.html":{}}}],["src/chart/chart.module.ts",{"_index":358,"title":{},"body":{"modules/ChartModule.html":{}}}],["src/chart/chart.service.ts",{"_index":360,"title":{},"body":{"injectables/ChartService.html":{},"coverage.html":{}}}],["src/chart/chart.service.ts:5",{"_index":361,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/chart/chart.service.ts:7",{"_index":362,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/comment/comment.controller.ts",{"_index":366,"title":{},"body":{"controllers/CommentController.html":{},"coverage.html":{}}}],["src/comment/comment.controller.ts:10",{"_index":373,"title":{},"body":{"controllers/CommentController.html":{}}}],["src/comment/comment.controller.ts:21",{"_index":371,"title":{},"body":{"controllers/CommentController.html":{}}}],["src/comment/comment.module.ts",{"_index":389,"title":{},"body":{"modules/CommentModule.html":{}}}],["src/comment/comment.service.ts",{"_index":391,"title":{},"body":{"injectables/CommentService.html":{},"coverage.html":{}}}],["src/comment/comment.service.ts:65",{"_index":397,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/comment/comment.service.ts:7",{"_index":393,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/comment/comment.service.ts:9",{"_index":395,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/comment/comment.service.ts:99",{"_index":399,"title":{},"body":{"injectables/CommentService.html":{}}}],["src/comment/dto/create",{"_index":586,"title":{},"body":{"classes/CreateCommentDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":421,"title":{},"body":{"controllers/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:107",{"_index":452,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:26",{"_index":435,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:35",{"_index":437,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:40",{"_index":440,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:45",{"_index":448,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:53",{"_index":443,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:58",{"_index":432,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:63",{"_index":451,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:72",{"_index":445,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:78",{"_index":463,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:86",{"_index":459,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.controller.ts:99",{"_index":455,"title":{},"body":{"controllers/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":493,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/courses.service.ts",{"_index":509,"title":{},"body":{"injectables/CoursesService.html":{},"coverage.html":{}}}],["src/courses/courses.service.ts:12",{"_index":512,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:14",{"_index":515,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:147",{"_index":514,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:186",{"_index":522,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:210",{"_index":525,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:255",{"_index":518,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:268",{"_index":526,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:304",{"_index":528,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:320",{"_index":530,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:351",{"_index":527,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:42",{"_index":532,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:59",{"_index":516,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/courses.service.ts:91",{"_index":524,"title":{},"body":{"injectables/CoursesService.html":{}}}],["src/courses/dto/create",{"_index":591,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/courses/dto/update",{"_index":913,"title":{},"body":{"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["src/courses/entities/course.entity.ts",{"_index":419,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/database/database.module.ts",{"_index":654,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.service",{"_index":254,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{},"injectables/VideosService.html":{}}}],["src/database/database.service.ts",{"_index":656,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/database/database.service.ts:5",{"_index":660,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/folders/dto/create",{"_index":600,"title":{},"body":{"classes/CreateFolderDto.html":{},"coverage.html":{}}}],["src/folders/dto/update",{"_index":915,"title":{},"body":{"classes/UpdateFolderDto.html":{},"coverage.html":{}}}],["src/folders/entities/folder.entity.ts",{"_index":663,"title":{},"body":{"classes/Folder.html":{},"coverage.html":{}}}],["src/folders/folders.controller.ts",{"_index":665,"title":{},"body":{"controllers/FoldersController.html":{},"coverage.html":{}}}],["src/folders/folders.controller.ts:22",{"_index":668,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/folders/folders.controller.ts:30",{"_index":670,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/folders/folders.controller.ts:35",{"_index":671,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/folders/folders.controller.ts:40",{"_index":674,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/folders/folders.controller.ts:45",{"_index":672,"title":{},"body":{"controllers/FoldersController.html":{}}}],["src/folders/folders.module.ts",{"_index":690,"title":{},"body":{"modules/FoldersModule.html":{}}}],["src/folders/folders.service.ts",{"_index":692,"title":{},"body":{"injectables/FoldersService.html":{},"coverage.html":{}}}],["src/folders/folders.service.ts:22",{"_index":696,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/folders/folders.service.ts:34",{"_index":697,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/folders/folders.service.ts:38",{"_index":699,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/folders/folders.service.ts:42",{"_index":698,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/folders/folders.service.ts:7",{"_index":693,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/folders/folders.service.ts:9",{"_index":694,"title":{},"body":{"injectables/FoldersService.html":{}}}],["src/gateway/gateway.module.ts",{"_index":759,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/gateway/gateway.ts",{"_index":704,"title":{},"body":{"classes/Gateway.html":{},"coverage.html":{}}}],["src/gateway/gateway.ts:19",{"_index":709,"title":{},"body":{"classes/Gateway.html":{}}}],["src/gateway/gateway.ts:25",{"_index":711,"title":{},"body":{"classes/Gateway.html":{}}}],["src/gateway/gateway.ts:26",{"_index":721,"title":{},"body":{"classes/Gateway.html":{}}}],["src/gateway/gateway.ts:33",{"_index":719,"title":{},"body":{"classes/Gateway.html":{}}}],["src/gateway/gateway.ts:44",{"_index":716,"title":{},"body":{"classes/Gateway.html":{}}}],["src/gateway/gateway.ts:76",{"_index":724,"title":{},"body":{"classes/Gateway.html":{}}}],["src/learning/dto/create",{"_index":613,"title":{},"body":{"classes/CreateLearningDto.html":{},"coverage.html":{}}}],["src/learning/dto/update",{"_index":917,"title":{},"body":{"classes/UpdateLearningDto.html":{},"coverage.html":{}}}],["src/learning/entities/learning.entity.ts",{"_index":761,"title":{},"body":{"classes/Learning.html":{},"coverage.html":{}}}],["src/learning/learning.controller.ts",{"_index":763,"title":{},"body":{"controllers/LearningController.html":{},"coverage.html":{}}}],["src/learning/learning.controller.ts:21",{"_index":765,"title":{},"body":{"controllers/LearningController.html":{}}}],["src/learning/learning.controller.ts:26",{"_index":766,"title":{},"body":{"controllers/LearningController.html":{}}}],["src/learning/learning.controller.ts:31",{"_index":768,"title":{},"body":{"controllers/LearningController.html":{}}}],["src/learning/learning.controller.ts:36",{"_index":771,"title":{},"body":{"controllers/LearningController.html":{}}}],["src/learning/learning.controller.ts:44",{"_index":769,"title":{},"body":{"controllers/LearningController.html":{}}}],["src/learning/learning.module.ts",{"_index":783,"title":{},"body":{"modules/LearningModule.html":{}}}],["src/learning/learning.service.ts",{"_index":785,"title":{},"body":{"injectables/LearningService.html":{},"coverage.html":{}}}],["src/learning/learning.service.ts:13",{"_index":788,"title":{},"body":{"injectables/LearningService.html":{}}}],["src/learning/learning.service.ts:17",{"_index":789,"title":{},"body":{"injectables/LearningService.html":{}}}],["src/learning/learning.service.ts:34",{"_index":791,"title":{},"body":{"injectables/LearningService.html":{}}}],["src/learning/learning.service.ts:38",{"_index":790,"title":{},"body":{"injectables/LearningService.html":{}}}],["src/learning/learning.service.ts:7",{"_index":786,"title":{},"body":{"injectables/LearningService.html":{}}}],["src/learning/learning.service.ts:9",{"_index":787,"title":{},"body":{"injectables/LearningService.html":{}}}],["src/main.ts",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/notebook/dto/create",{"_index":629,"title":{},"body":{"classes/CreateNotebookDto.html":{},"coverage.html":{}}}],["src/notebook/dto/update",{"_index":921,"title":{},"body":{"classes/UpdateNotebookDto.html":{},"coverage.html":{}}}],["src/notebook/entities/notebook.entity.ts",{"_index":797,"title":{},"body":{"classes/Notebook.html":{},"coverage.html":{}}}],["src/notebook/notebook.controller.ts",{"_index":799,"title":{},"body":{"controllers/NotebookController.html":{},"coverage.html":{}}}],["src/notebook/notebook.controller.ts:11",{"_index":801,"title":{},"body":{"controllers/NotebookController.html":{}}}],["src/notebook/notebook.controller.ts:16",{"_index":802,"title":{},"body":{"controllers/NotebookController.html":{}}}],["src/notebook/notebook.controller.ts:21",{"_index":803,"title":{},"body":{"controllers/NotebookController.html":{}}}],["src/notebook/notebook.controller.ts:26",{"_index":806,"title":{},"body":{"controllers/NotebookController.html":{}}}],["src/notebook/notebook.controller.ts:31",{"_index":804,"title":{},"body":{"controllers/NotebookController.html":{}}}],["src/notebook/notebook.module.ts",{"_index":818,"title":{},"body":{"modules/NotebookModule.html":{}}}],["src/notebook/notebook.service.ts",{"_index":820,"title":{},"body":{"injectables/NotebookService.html":{},"coverage.html":{}}}],["src/notebook/notebook.service.ts:11",{"_index":822,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/notebook/notebook.service.ts:15",{"_index":823,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/notebook/notebook.service.ts:19",{"_index":825,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/notebook/notebook.service.ts:23",{"_index":824,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/notebook/notebook.service.ts:7",{"_index":821,"title":{},"body":{"injectables/NotebookService.html":{}}}],["src/notes/dto/create",{"_index":616,"title":{},"body":{"classes/CreateNoteDto.html":{},"coverage.html":{}}}],["src/notes/dto/update",{"_index":919,"title":{},"body":{"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["src/notes/entities/note.entity.ts",{"_index":795,"title":{},"body":{"classes/Note.html":{},"coverage.html":{}}}],["src/notes/notes.controller.ts",{"_index":827,"title":{},"body":{"controllers/NotesController.html":{},"coverage.html":{}}}],["src/notes/notes.controller.ts:23",{"_index":831,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/notes.controller.ts:31",{"_index":832,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/notes.controller.ts:35",{"_index":836,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/notes.controller.ts:43",{"_index":833,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/notes.controller.ts:48",{"_index":839,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/notes.controller.ts:53",{"_index":837,"title":{},"body":{"controllers/NotesController.html":{}}}],["src/notes/notes.module.ts",{"_index":853,"title":{},"body":{"modules/NotesModule.html":{}}}],["src/notes/notes.service.ts",{"_index":855,"title":{},"body":{"injectables/NotesService.html":{},"coverage.html":{}}}],["src/notes/notes.service.ts:37",{"_index":858,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/notes.service.ts:51",{"_index":860,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/notes.service.ts:7",{"_index":856,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/notes.service.ts:73",{"_index":859,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/notes.service.ts:87",{"_index":862,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/notes.service.ts:9",{"_index":857,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/notes/notes.service.ts:91",{"_index":861,"title":{},"body":{"injectables/NotesService.html":{}}}],["src/payment/dto/create",{"_index":632,"title":{},"body":{"classes/CreatePaymentDto.html":{},"coverage.html":{}}}],["src/payment/payment.controller.ts",{"_index":874,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/payment/payment.controller.ts:10",{"_index":876,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.module.ts",{"_index":884,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/payment/payment.service.ts",{"_index":886,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/payment/payment.service.ts:6",{"_index":887,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:8",{"_index":888,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/users/users.module",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":926,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":928,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:15",{"_index":932,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:6",{"_index":929,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:8",{"_index":935,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/videos/dto/create",{"_index":645,"title":{},"body":{"classes/CreateVideoDto.html":{},"classes/Video.html":{},"coverage.html":{}}}],["src/videos/videos.controller.ts",{"_index":943,"title":{},"body":{"controllers/VideosController.html":{},"coverage.html":{}}}],["src/videos/videos.module.ts",{"_index":954,"title":{},"body":{"modules/VideosModule.html":{}}}],["src/videos/videos.service.ts",{"_index":956,"title":{},"body":{"injectables/VideosService.html":{},"coverage.html":{}}}],["src/videos/videos.service.ts:10",{"_index":957,"title":{},"body":{"injectables/VideosService.html":{}}}],["start",{"_index":1031,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1034,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1036,"title":{},"body":{"index.html":{}}}],["started",{"_index":1011,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1022,"title":{},"body":{"index.html":{}}}],["statements",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["stay",{"_index":1057,"title":{},"body":{"index.html":{}}}],["storage",{"_index":499,"title":{},"body":{"modules/CoursesModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"injectables/VideosService.html":{},"miscellaneous/variables.html":{}}}],["students",{"_index":561,"title":{},"body":{"injectables/CoursesService.html":{}}}],["subscribemessage",{"_index":727,"title":{},"body":{"classes/Gateway.html":{}}}],["subscribemessage('leanrning_timestamp",{"_index":723,"title":{},"body":{"classes/Gateway.html":{}}}],["subscribemessage('newmessage",{"_index":718,"title":{},"body":{"classes/Gateway.html":{}}}],["subscribemessage('write_note",{"_index":715,"title":{},"body":{"classes/Gateway.html":{}}}],["success",{"_index":577,"title":{},"body":{"injectables/CoursesService.html":{}}}],["support",{"_index":1049,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1068,"title":{},"body":{"modules.html":{}}}],["table",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["teacher's",{"_index":520,"title":{},"body":{"injectables/CoursesService.html":{}}}],["test",{"_index":744,"title":{},"body":{"classes/Gateway.html":{},"index.html":{}}}],["test:covsupport",{"_index":1041,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1040,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1038,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1047,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":661,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.register(registerdto",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.categoryservice.findall",{"_index":244,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.chaptersservice.create(createchapterdto",{"_index":297,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["this.chaptersservice.findall",{"_index":299,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["this.chaptersservice.findone(id",{"_index":301,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["this.chaptersservice.remove(+id",{"_index":305,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["this.chaptersservice.update(+id",{"_index":303,"title":{},"body":{"controllers/ChaptersController.html":{}}}],["this.chartservice.findenrollment(id",{"_index":355,"title":{},"body":{"controllers/ChartController.html":{}}}],["this.commentservice.create(body",{"_index":385,"title":{},"body":{"controllers/CommentController.html":{}}}],["this.commentservice.findall(+videoid",{"_index":383,"title":{},"body":{"controllers/CommentController.html":{}}}],["this.commentservice.findbycourse(+courseid",{"_index":384,"title":{},"body":{"controllers/CommentController.html":{}}}],["this.coursesservice.counttotalincome(+req.params.courseid",{"_index":481,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.create",{"_index":472,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.findall",{"_index":473,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.findbyuuidteacher(req['user'].uuid",{"_index":479,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.findbyuuiduser(req['user'].uuid",{"_index":475,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.findone(id",{"_index":483,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.findonebyuuid(courseid",{"_index":477,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.findonebyuuidteacher(courseid",{"_index":482,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.remove(id",{"_index":490,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.update(id",{"_index":489,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.updatesequencevideo(id",{"_index":488,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.coursesservice.uploadthumbnail(id",{"_index":486,"title":{},"body":{"controllers/CoursesController.html":{}}}],["this.databaseservice",{"_index":336,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["this.databaseservice.category.findmany",{"_index":256,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.databaseservice.chapter.findmany",{"_index":338,"title":{},"body":{"injectables/ChaptersService.html":{}}}],["this.databaseservice.comment.create",{"_index":410,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.databaseservice.comment.findmany",{"_index":413,"title":{},"body":{"injectables/CommentService.html":{}}}],["this.databaseservice.course.delete",{"_index":579,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.databaseservice.course.findmany",{"_index":552,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.databaseservice.course.findunique",{"_index":320,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CoursesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["this.databaseservice.course.update",{"_index":328,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CoursesService.html":{}}}],["this.databaseservice.enrollment.create",{"_index":894,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.databaseservice.enrollment.findmany",{"_index":364,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CoursesService.html":{}}}],["this.databaseservice.enrollment.findunique",{"_index":564,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.databaseservice.folders.create",{"_index":701,"title":{},"body":{"injectables/FoldersService.html":{}}}],["this.databaseservice.folders.findfirst",{"_index":864,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.databaseservice.folders.findmany",{"_index":702,"title":{},"body":{"injectables/FoldersService.html":{}}}],["this.databaseservice.learning.findunique",{"_index":793,"title":{},"body":{"injectables/LearningService.html":{}}}],["this.databaseservice.learning.upsert",{"_index":754,"title":{},"body":{"classes/Gateway.html":{}}}],["this.databaseservice.notes.create",{"_index":867,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.databaseservice.notes.findfirst",{"_index":870,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.databaseservice.notes.findmany",{"_index":869,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.databaseservice.notes.findunique",{"_index":872,"title":{},"body":{"injectables/NotesService.html":{}}}],["this.databaseservice.notes.upsert",{"_index":745,"title":{},"body":{"classes/Gateway.html":{}}}],["this.databaseservice.payment.aggregate",{"_index":557,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.databaseservice.payment.create",{"_index":891,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.databaseservice.payment.findmany",{"_index":562,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.databaseservice.user.create",{"_index":937,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.databaseservice.user.findunique",{"_index":936,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.databaseservice.user.update",{"_index":545,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.databaseservice.video.createmany",{"_index":964,"title":{},"body":{"injectables/VideosService.html":{}}}],["this.databaseservice.video.update",{"_index":572,"title":{},"body":{"injectables/CoursesService.html":{}}}],["this.extracttokenfromheader(request",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.foldersservice.create",{"_index":680,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.foldersservice.findall(req.user['uuid",{"_index":683,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.foldersservice.findone(+id",{"_index":684,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.foldersservice.remove(+id",{"_index":687,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.foldersservice.update(+id",{"_index":686,"title":{},"body":{"controllers/FoldersController.html":{}}}],["this.jwtservice.signasync(payload",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(client.handshake.auth.token).uuid",{"_index":743,"title":{},"body":{"classes/Gateway.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.learningservice.create(createlearningdto",{"_index":776,"title":{},"body":{"controllers/LearningController.html":{}}}],["this.learningservice.findall",{"_index":777,"title":{},"body":{"controllers/LearningController.html":{}}}],["this.learningservice.findone(idvideo",{"_index":778,"title":{},"body":{"controllers/LearningController.html":{}}}],["this.learningservice.remove(+id",{"_index":780,"title":{},"body":{"controllers/LearningController.html":{}}}],["this.learningservice.update(+id",{"_index":779,"title":{},"body":{"controllers/LearningController.html":{}}}],["this.notebookservice.create(createnotebookdto",{"_index":811,"title":{},"body":{"controllers/NotebookController.html":{}}}],["this.notebookservice.findall",{"_index":812,"title":{},"body":{"controllers/NotebookController.html":{}}}],["this.notebookservice.findone(+id",{"_index":813,"title":{},"body":{"controllers/NotebookController.html":{}}}],["this.notebookservice.remove(+id",{"_index":815,"title":{},"body":{"controllers/NotebookController.html":{}}}],["this.notebookservice.update(+id",{"_index":814,"title":{},"body":{"controllers/NotebookController.html":{}}}],["this.notesservice.create",{"_index":844,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.findall(req.user['uuid",{"_index":845,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.findone(+id",{"_index":848,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.findonebyvideoid(videoid",{"_index":847,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.remove(+id",{"_index":850,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.notesservice.update(+id",{"_index":849,"title":{},"body":{"controllers/NotesController.html":{}}}],["this.paymentservice.create(body",{"_index":881,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.server.emit('connected",{"_index":738,"title":{},"body":{"classes/Gateway.html":{}}}],["this.server.on('connection",{"_index":735,"title":{},"body":{"classes/Gateway.html":{}}}],["this.usersservice.create",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(registerdto.email",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(signindto.email",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.videosservice.create(req['user'].uuid",{"_index":951,"title":{},"body":{"controllers/VideosController.html":{}}}],["throw",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["thumbnail.png",{"_index":544,"title":{},"body":{"injectables/CoursesService.html":{}}}],["thumbnail_folder_path",{"_index":547,"title":{},"body":{"injectables/CoursesService.html":{}}}],["thumbnails",{"_index":503,"title":{},"body":{"modules/CoursesModule.html":{}}}],["timelearned",{"_index":751,"title":{},"body":{"classes/Gateway.html":{}}}],["title",{"_index":330,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreateVideoDto.html":{},"classes/Gateway.html":{},"classes/Video.html":{}}}],["token",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{}}}],["total",{"_index":556,"title":{},"body":{"injectables/CoursesService.html":{}}}],["touch",{"_index":1058,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["twitter",{"_index":1064,"title":{},"body":{"index.html":{}}}],["type",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/ChartController.html":{},"injectables/ChartService.html":{},"controllers/CommentController.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateChapterDto.html":{},"classes/CreateCommentDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"injectables/UsersService.html":{},"classes/Video.html":{},"injectables/VideosService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":912,"title":{},"body":{"classes/UpdateChapterDto.html":{},"classes/UpdateCourseDto.html":{},"classes/UpdateFolderDto.html":{},"classes/UpdateLearningDto.html":{},"classes/UpdateNoteDto.html":{},"classes/UpdateNotebookDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1021,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["undefined",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["unit",{"_index":1037,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/ChaptersService.html":{},"injectables/ChartService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1079,"title":{},"body":{"properties.html":{}}}],["update",{"_index":267,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["update(@param('id",{"_index":685,"title":{},"body":{"controllers/FoldersController.html":{},"controllers/NotebookController.html":{},"controllers/NotesController.html":{}}}],["update(id",{"_index":281,"title":{},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"controllers/LearningController.html":{},"injectables/LearningService.html":{},"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["updateat",{"_index":553,"title":{},"body":{"injectables/CoursesService.html":{}}}],["updatechapterdto",{"_index":282,"title":{"classes/UpdateChapterDto.html":{}},"body":{"controllers/ChaptersController.html":{},"injectables/ChaptersService.html":{},"classes/UpdateChapterDto.html":{},"coverage.html":{}}}],["updatecoursedto",{"_index":453,"title":{"classes/UpdateCourseDto.html":{}},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/UpdateCourseDto.html":{},"coverage.html":{}}}],["updatecoursedto.price",{"_index":569,"title":{},"body":{"injectables/CoursesService.html":{}}}],["updatedthumbnail",{"_index":549,"title":{},"body":{"injectables/CoursesService.html":{}}}],["updatefolderdto",{"_index":673,"title":{"classes/UpdateFolderDto.html":{}},"body":{"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/UpdateFolderDto.html":{},"coverage.html":{}}}],["updatelearningdto",{"_index":770,"title":{"classes/UpdateLearningDto.html":{}},"body":{"controllers/LearningController.html":{},"injectables/LearningService.html":{},"classes/UpdateLearningDto.html":{},"coverage.html":{}}}],["updatenotebookdto",{"_index":805,"title":{"classes/UpdateNotebookDto.html":{}},"body":{"controllers/NotebookController.html":{},"injectables/NotebookService.html":{},"classes/UpdateNotebookDto.html":{},"coverage.html":{}}}],["updatenotedto",{"_index":838,"title":{"classes/UpdateNoteDto.html":{}},"body":{"controllers/NotesController.html":{},"injectables/NotesService.html":{},"classes/UpdateNoteDto.html":{},"coverage.html":{}}}],["updates",{"_index":341,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/FoldersService.html":{},"injectables/LearningService.html":{},"injectables/NotebookService.html":{},"injectables/NotesService.html":{}}}],["updatesequencevideo",{"_index":428,"title":{},"body":{"controllers/CoursesController.html":{},"injectables/CoursesService.html":{}}}],["updatesequencevideo(courseid",{"_index":529,"title":{},"body":{"injectables/CoursesService.html":{}}}],["updatesequencevideo(id",{"_index":456,"title":{},"body":{"controllers/CoursesController.html":{}}}],["updatethumbnail",{"_index":429,"title":{},"body":{"controllers/CoursesController.html":{}}}],["updatethumbnail(id",{"_index":460,"title":{},"body":{"controllers/CoursesController.html":{}}}],["upload/image/default/default",{"_index":543,"title":{},"body":{"injectables/CoursesService.html":{}}}],["uploadedfile",{"_index":465,"title":{},"body":{"controllers/CoursesController.html":{}}}],["uploadthumbnail",{"_index":511,"title":{},"body":{"injectables/CoursesService.html":{}}}],["uploadthumbnail(id",{"_index":531,"title":{},"body":{"injectables/CoursesService.html":{}}}],["url",{"_index":649,"title":{},"body":{"classes/CreateVideoDto.html":{},"classes/Video.html":{}}}],["useclass",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["useinterceptors",{"_index":464,"title":{},"body":{"controllers/CoursesController.html":{}}}],["useinterceptors(fileinterceptor('thumbnail",{"_index":485,"title":{},"body":{"controllers/CoursesController.html":{}}}],["user",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"injectables/CoursesService.html":{},"classes/Gateway.html":{},"injectables/VideosService.html":{}}}],["user's",{"_index":523,"title":{},"body":{"injectables/CoursesService.html":{}}}],["user.password",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.password",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercreateinput",{"_index":933,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":927,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["usersmodule",{"_index":53,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":200,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uuid",{"_index":312,"title":{},"body":{"injectables/ChaptersService.html":{},"injectables/CommentService.html":{},"controllers/CoursesController.html":{},"injectables/CoursesService.html":{},"classes/CreateCourseDto.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"controllers/FoldersController.html":{},"injectables/FoldersService.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{},"injectables/PaymentService.html":{},"injectables/VideosService.html":{}}}],["uuid_courseid",{"_index":565,"title":{},"body":{"injectables/CoursesService.html":{}}}],["uuid_videoid",{"_index":746,"title":{},"body":{"classes/Gateway.html":{}}}],["validateif",{"_index":609,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{}}}],["validateif((obj",{"_index":611,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{}}}],["validator",{"_index":610,"title":{},"body":{"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateVideoDto.html":{},"classes/RegisterDto.html":{},"classes/SignInDto.html":{},"classes/Video.html":{},"dependencies.html":{}}}],["value",{"_index":571,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateFolderDto.html":{},"classes/CreateNoteDto.html":{},"miscellaneous/variables.html":{}}}],["value.chapter",{"_index":575,"title":{},"body":{"injectables/CoursesService.html":{}}}],["value.id",{"_index":573,"title":{},"body":{"injectables/CoursesService.html":{}}}],["value.sequence",{"_index":576,"title":{},"body":{"injectables/CoursesService.html":{}}}],["variable",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1080,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1077,"title":{},"body":{"properties.html":{}}}],["video",{"_index":406,"title":{"classes/Video.html":{}},"body":{"injectables/CommentService.html":{},"classes/CreateVideoDto.html":{},"classes/Gateway.html":{},"classes/Video.html":{},"injectables/VideosService.html":{},"coverage.html":{}}}],["video.dto",{"_index":946,"title":{},"body":{"controllers/VideosController.html":{},"injectables/VideosService.html":{}}}],["video.dto.ts",{"_index":646,"title":{},"body":{"classes/CreateVideoDto.html":{},"classes/Video.html":{},"coverage.html":{}}}],["video.dto.ts:14",{"_index":647,"title":{},"body":{"classes/CreateVideoDto.html":{}}}],["video.dto.ts:15",{"_index":648,"title":{},"body":{"classes/CreateVideoDto.html":{}}}],["video.dto.ts:4",{"_index":940,"title":{},"body":{"classes/Video.html":{}}}],["video.dto.ts:5",{"_index":941,"title":{},"body":{"classes/Video.html":{}}}],["video.dto.ts:7",{"_index":939,"title":{},"body":{"classes/Video.html":{}}}],["video.dto.ts:9",{"_index":938,"title":{},"body":{"classes/Video.html":{}}}],["videocreate",{"_index":963,"title":{},"body":{"injectables/VideosService.html":{}}}],["videoid",{"_index":374,"title":{},"body":{"controllers/CommentController.html":{},"injectables/CommentService.html":{},"classes/CreateCommentDto.html":{},"classes/CreateNoteDto.html":{},"classes/Gateway.html":{},"injectables/LearningService.html":{},"controllers/NotesController.html":{},"injectables/NotesService.html":{}}}],["videoid_uuid",{"_index":755,"title":{},"body":{"classes/Gateway.html":{},"injectables/LearningService.html":{}}}],["videos",{"_index":554,"title":{},"body":{"injectables/CoursesService.html":{},"classes/CreateVideoDto.html":{},"classes/Video.html":{},"controllers/VideosController.html":{}}}],["videos.controller",{"_index":955,"title":{},"body":{"modules/VideosModule.html":{}}}],["videos.service",{"_index":945,"title":{},"body":{"controllers/VideosController.html":{},"modules/VideosModule.html":{}}}],["videos/videos.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["videoscontroller",{"_index":942,"title":{"controllers/VideosController.html":{}},"body":{"controllers/VideosController.html":{},"modules/VideosModule.html":{},"coverage.html":{}}}],["videosmodule",{"_index":54,"title":{"modules/VideosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VideosModule.html":{},"modules.html":{},"overview.html":{}}}],["videosservice",{"_index":944,"title":{"injectables/VideosService.html":{}},"body":{"controllers/VideosController.html":{},"modules/VideosModule.html":{},"injectables/VideosService.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":720,"title":{},"body":{"classes/Gateway.html":{}}}],["watch",{"_index":1032,"title":{},"body":{"index.html":{}}}],["website",{"_index":1062,"title":{},"body":{"index.html":{}}}],["websocketgateway",{"_index":728,"title":{},"body":{"classes/Gateway.html":{}}}],["websocketgateway(3003",{"_index":731,"title":{},"body":{"classes/Gateway.html":{}}}],["websocketserver",{"_index":710,"title":{},"body":{"classes/Gateway.html":{}}}],["world",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["yes",{"_index":375,"title":{},"body":{"controllers/CommentController.html":{}}}],["you'd",{"_index":1052,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoryModule.html":{},"modules/ChaptersModule.html":{},"modules/ChartModule.html":{},"modules/CommentModule.html":{},"modules/CoursesModule.html":{},"modules/DatabaseModule.html":{},"modules/FoldersModule.html":{},"modules/LearningModule.html":{},"modules/NotebookModule.html":{},"modules/NotesModule.html":{},"modules/PaymentModule.html":{},"modules/UsersModule.html":{},"modules/VideosModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nChaptersModule\n\nChaptersModule\n\nAppModule -->\n\nChaptersModule->AppModule\n\n\n\n\n\nChartModule\n\nChartModule\n\nAppModule -->\n\nChartModule->AppModule\n\n\n\n\n\nCommentModule\n\nCommentModule\n\nAppModule -->\n\nCommentModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nFoldersModule\n\nFoldersModule\n\nAppModule -->\n\nFoldersModule->AppModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nAppModule -->\n\nGatewayModule->AppModule\n\n\n\n\n\nLearningModule\n\nLearningModule\n\nAppModule -->\n\nLearningModule->AppModule\n\n\n\n\n\nNotebookModule\n\nNotebookModule\n\nAppModule -->\n\nNotebookModule->AppModule\n\n\n\n\n\nNotesModule\n\nNotesModule\n\nAppModule -->\n\nNotesModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nVideosModule\n\nVideosModule\n\nAppModule -->\n\nVideosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            DatabaseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoryModule\n                        \n                        \n                            ChaptersModule\n                        \n                        \n                            ChartModule\n                        \n                        \n                            CommentModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            FoldersModule\n                        \n                        \n                            GatewayModule\n                        \n                        \n                            LearningModule\n                        \n                        \n                            NotebookModule\n                        \n                        \n                            NotesModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            VideosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { DatabaseService } from './database/database.service';\nimport { DatabaseModule } from './database/database.module';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { ChaptersModule } from './chapters/chapters.module';\nimport { VideosModule } from './videos/videos.module';\nimport { PaymentModule } from './payment/payment.module';\nimport { CategoryModule } from './category/category.module';\n\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { GatewayModule } from './gateway/gateway.module';\nimport { NotesModule } from './notes/notes.module';\nimport { FoldersModule } from './folders/folders.module';\nimport { LearningModule } from './learning/learning.module';\nimport { CommentModule } from './comment/comment.module';\nimport { NotebookModule } from './notebook/notebook.module';\nimport { ChartModule } from './chart/chart.module';\n\n@Module({\n  imports: [\n    DatabaseModule,\n    AuthModule,\n    UsersModule,\n    CoursesModule,\n    ChaptersModule,\n    VideosModule,\n    PaymentModule,\n    CategoryModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    GatewayModule,\n    NotesModule,\n    FoldersModule,\n    LearningModule,\n    CommentModule,\n    NotebookModule,\n    ChartModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, DatabaseService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  HttpCode,\n  HttpStatus,\n  Body,\n  Post,\n  Res,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { SignInDto } from './dto/sign-in.dto';\nimport { Public } from './auth.decorator';\nimport { RegisterDto } from './dto/register.dto';\nimport { Response } from 'express';\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('login')\n  signIn(\n    @Body() signInDto: SignInDto,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    return this.authService.signIn(signInDto, response);\n  }\n\n  @Public()\n  @HttpCode(HttpStatus.OK)\n  @Post('register')\n  register(@Body() registerDto: RegisterDto) {\n    return this.authService.register(registerDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\nimport { IS_PUBLIC_KEY } from './auth.decorator';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private jwtService: JwtService,\n    private reflector: Reflector,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) {\n      // 💡 See this condition\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n\n    const token = this.extractTokenFromHeader(request);\n    if (!token) {\n      throw new UnauthorizedException();\n    }\n\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: process.env.JWT_SECRET,\n      });\n      request['user'] = payload;\n    } catch {\n      throw new UnauthorizedException();\n    }\n    return true;\n  }\n\n  private extractTokenFromHeader(request: Request): string | undefined {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AuthGuard } from './auth.guard';\n\n@Module({\n  imports: [\n    UsersModule,\n    JwtModule.register({\n      global: true,\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '2days' },\n    }),\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerDto: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(signInDto: SignInDto, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotAcceptableException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { SignInDto } from './dto/sign-in.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { RegisterDto } from './dto/register.dto';\nimport * as bcrypt from 'bcrypt';\nimport { Response } from 'express';\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async signIn(signInDto: SignInDto, res: Response) {\n    const user = await this.usersService.findOne(signInDto.email);\n    if (!user?.password) {\n      throw new UnauthorizedException();\n    } else if (\n      (await bcrypt.compare(signInDto.password, user.password)) === false\n    ) {\n      throw new UnauthorizedException();\n    }\n\n    const payload = { ...user };\n    delete payload.password;\n    const access_token = await this.jwtService.signAsync(payload);\n    res.cookie('access_token', access_token);\n    return {\n      access_token: access_token,\n      role: payload.role,\n      name: payload.name,\n      email: payload.email,\n    };\n  }\n  async register(registerDto: RegisterDto) {\n    if (await this.usersService.findOne(registerDto.email)) {\n      throw new NotAcceptableException('Email already exist');\n    }\n    const saltOrRounds = 10;\n    const hash: string = await bcrypt.hash(registerDto.password, saltOrRounds);\n    return this.usersService.create({ ...registerDto, password: hash });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                category\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/category/category.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { Public } from 'src/auth/auth.decorator';\nimport { CategoryService } from './category.service';\n\n@Controller('category')\nexport class CategoryController {\n  constructor(private categoryService: CategoryService) {}\n  @Get()\n  @Public()\n  findAll() {\n    return this.categoryService.findAll();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoryService } from './category.service';\nimport { CategoryController } from './category.controller';\n\n@Module({\n  providers: [CategoryService],\n  controllers: [CategoryController],\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/category/category.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/category/category.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { DatabaseService } from 'src/database/database.service';\n\n@Injectable()\nexport class CategoryService {\n  constructor(private databaseService: DatabaseService) {}\n\n  async findAll() {\n    try {\n      const categories = await this.databaseService.category.findMany();\n      return categories;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chapter.html":{"url":"classes/Chapter.html","title":"class - Chapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chapters/entities/chapter.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Chapter {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChaptersController.html":{"url":"controllers/ChaptersController.html","title":"controller - ChaptersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChaptersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chapters/chapters.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                chapters\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createChapterDto: CreateChapterDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/chapters/chapters.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createChapterDto\n                                            \n                                                            CreateChapterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/chapters/chapters.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/chapters/chapters.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/chapters/chapters.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateChapterDto: Prisma.ChapterUpdateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/chapters/chapters.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateChapterDto\n                                            \n                                                            Prisma.ChapterUpdateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Req,\n  Patch,\n  Param,\n  Delete,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { ChaptersService } from './chapters.service';\nimport { Prisma } from '@prisma/client';\nimport { CreateChapterDto } from './dto/create-chapter.dto';\nimport { Request } from 'express';\n\n@Controller('chapters')\nexport class ChaptersController {\n  constructor(private readonly chaptersService: ChaptersService) {}\n\n  @Post()\n  create(@Body() createChapterDto: CreateChapterDto, @Req() req: Request) {\n    return this.chaptersService.create(createChapterDto, req['user'].uuid);\n  }\n\n  @Get()\n  findAll() {\n    return this.chaptersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseIntPipe) id: number) {\n    return this.chaptersService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateChapterDto: Prisma.ChapterUpdateInput,\n  ) {\n    return this.chaptersService.update(+id, updateChapterDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.chaptersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChaptersModule.html":{"url":"modules/ChaptersModule.html","title":"module - ChaptersModule","body":"\n                   \n\n\n\n\n    Modules\n    ChaptersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChaptersModule\n\n\n\ncluster_ChaptersModule_providers\n\n\n\n\nChaptersService\n\nChaptersService\n\n\n\nChaptersModule\n\nChaptersModule\n\nChaptersModule -->\n\nChaptersService->ChaptersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chapters/chapters.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChaptersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChaptersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChaptersService } from './chapters.service';\nimport { ChaptersController } from './chapters.controller';\n\n@Module({\n  controllers: [ChaptersController],\n  providers: [ChaptersService],\n})\nexport class ChaptersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChaptersService.html":{"url":"injectables/ChaptersService.html","title":"injectable - ChaptersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChaptersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chapters/chapters.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/chapters/chapters.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createChapterDto: CreateChapterDto, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chapters/chapters.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createChapterDto\n                                            \n                                                            CreateChapterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/chapters/chapters.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chapters/chapters.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chapters/chapters.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateChapterDto: Prisma.ChapterUpdateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chapters/chapters.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateChapterDto\n                                            \n                                                            Prisma.ChapterUpdateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotAcceptableException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { DatabaseService } from 'src/database/database.service';\nimport { Prisma } from '@prisma/client';\nimport { CreateChapterDto } from './dto/create-chapter.dto';\n@Injectable()\nexport class ChaptersService {\n  constructor(private databaseService: DatabaseService) {}\n  async create(createChapterDto: CreateChapterDto, uuid: string) {\n    try {\n      const courseRes = await this.databaseService.course.findUnique({\n        where: {\n          id: createChapterDto.courseId,\n          user: {\n            uuid: uuid,\n          },\n        },\n        select: {\n          chapters: true,\n        },\n      });\n      if (!courseRes) {\n        throw new NotAcceptableException();\n      }\n      const seq = courseRes.chapters.length + 1;\n\n      if (!createChapterDto.sequenceNumber) {\n        createChapterDto.sequenceNumber = seq;\n      }\n\n      const courseCreate = await this.databaseService.course.update({\n        where: {\n          id: createChapterDto.courseId,\n          user: {\n            uuid,\n          },\n        },\n        data: {\n          chapters: {\n            create: {\n              title: createChapterDto.title,\n              sequenceNumber: createChapterDto.sequenceNumber,\n            },\n          },\n        },\n        select: {\n          chapters: {\n            orderBy: {\n              id: 'desc',\n            },\n          },\n        },\n      });\n\n      return courseCreate.chapters[0];\n    } catch (error) {\n      throw new NotAcceptableException();\n    }\n  }\n\n  findAll() {\n    try {\n      // const chapters = await this.databaseService.\n      return `This action returns all chapters`;\n    } catch (error) {\n      //\n    }\n  }\n\n  findOne(id: number) {\n    return this.databaseService.chapter.findMany({\n      orderBy: { sequenceNumber: 'asc' },\n      where: { courseId: id },\n    });\n  }\n\n  update(id: number, updateChapterDto: Prisma.ChapterUpdateInput) {\n    return `This action updates a #${id} chapter`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} chapter`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChartController.html":{"url":"controllers/ChartController.html","title":"controller - ChartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chart/chart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                chart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findEnrollment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findEnrollment\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEnrollment(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('enrollment/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/chart/chart.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, ParseIntPipe } from '@nestjs/common';\nimport { ChartService } from './chart.service';\nimport { Public } from 'src/auth/auth.decorator';\n\n@Controller('chart')\nexport class ChartController {\n  constructor(private readonly chartService: ChartService) {}\n  @Public()\n  @Get('enrollment/:id')\n  findEnrollment(@Param('id', ParseIntPipe) id: number) {\n    return this.chartService.findEnrollment(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_providers\n\n\n\n\nChartService\n\nChartService\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChartController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChartService } from './chart.service';\nimport { ChartController } from './chart.controller';\n\n@Module({\n  controllers: [ChartController],\n  providers: [ChartService],\n})\nexport class ChartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chart/chart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findEnrollment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/chart/chart.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEnrollment\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEnrollment(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/chart/chart.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { DatabaseService } from 'src/database/database.service';\n\n@Injectable()\nexport class ChartService {\n  constructor(private databaseService: DatabaseService) {}\n  async findEnrollment(id: number) {\n    try {\n      const result = await this.databaseService.enrollment.findMany({\n        where: {\n          courseId: id,\n        },\n      });\n      return result;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommentController.html":{"url":"controllers/CommentController.html","title":"controller - CommentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comment/comment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                comment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreateCommentDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/comment/comment.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateCommentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(videoId?: string, courseId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/comment/comment.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                videoId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                courseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Req, Query } from '@nestjs/common';\nimport { CommentService } from './comment.service';\nimport { CreateCommentDto } from './dto/create-comment.dto';\n\n@Controller('comment')\nexport class CommentController {\n  constructor(private readonly commentService: CommentService) {}\n\n  @Get()\n  getAll(\n    @Query('videoId') videoId?: string,\n    @Query('courseId') courseId?: string,\n  ) {\n    if (videoId) {\n      return this.commentService.findAll(+videoId);\n    } else if (courseId) {\n      return this.commentService.findByCourse(+courseId);\n    }\n  }\n  @Post()\n  create(@Body() body: CreateCommentDto, @Req() req) {\n    return this.commentService.create(body, req.user['uuid']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommentModule.html":{"url":"modules/CommentModule.html","title":"module - CommentModule","body":"\n                   \n\n\n\n\n    Modules\n    CommentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommentModule\n\n\n\ncluster_CommentModule_providers\n\n\n\n\nCommentService\n\nCommentService\n\n\n\nCommentModule\n\nCommentModule\n\nCommentModule -->\n\nCommentService->CommentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/comment/comment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CommentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommentService } from './comment.service';\nimport { CommentController } from './comment.controller';\n\n@Module({\n  controllers: [CommentController],\n  providers: [CommentService],\n})\nexport class CommentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommentService.html":{"url":"injectables/CommentService.html","title":"injectable - CommentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comment/comment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/comment/comment.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateCommentDto, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/comment/comment.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateCommentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(videoId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/comment/comment.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                videoId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCourse\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCourse(courseId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/comment/comment.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { DatabaseService } from 'src/database/database.service';\nimport { CreateCommentDto } from './dto/create-comment.dto';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class CommentService {\n  constructor(private databaseService: DatabaseService) {}\n  async create(data: CreateCommentDto, uuid: string) {\n    try {\n      let dataCreate: Prisma.CommentCreateInput;\n      if (data.parentId) {\n        dataCreate = {\n          content: data.content,\n          user: {\n            connect: {\n              uuid: uuid,\n            },\n          },\n          video: {\n            connect: {\n              id: data.videoId,\n            },\n          },\n          parent: {\n            connect: {\n              id: +data.parentId,\n            },\n          },\n        };\n      } else {\n        dataCreate = {\n          content: data.content,\n          user: {\n            connect: {\n              uuid: uuid,\n            },\n          },\n          video: {\n            connect: {\n              id: data.videoId,\n            },\n          },\n        };\n      }\n\n      const createdComment = await this.databaseService.comment.create({\n        data: dataCreate,\n        include: {\n          user: {\n            select: {\n              email: true,\n              name: true,\n            },\n          },\n        },\n      });\n      return createdComment;\n    } catch (error) {\n      console.log(error);\n\n      throw new InternalServerErrorException();\n    }\n  }\n  async findAll(videoId: number) {\n    try {\n      const data = await this.databaseService.comment.findMany({\n        where: {\n          videoId: videoId,\n          parentId: null,\n        },\n        orderBy: {\n          createdAt: 'desc',\n        },\n        include: {\n          children: {\n            include: {\n              user: {\n                select: {\n                  email: true,\n                  name: true,\n                },\n              },\n            },\n          },\n          user: {\n            select: {\n              email: true,\n              name: true,\n            },\n          },\n        },\n      });\n      return data;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n  async findByCourse(courseId: number) {\n    try {\n      const data = this.databaseService.comment.findMany({\n        where: {\n          video: {\n            chapter: {\n              course: {\n                id: courseId,\n              },\n            },\n          },\n          parentId: null,\n        },\n        orderBy: {\n          createdAt: 'desc',\n        },\n        include: {\n          user: {\n            select: {\n              name: true,\n              email: true,\n            },\n          },\n          children: {\n            include: {\n              user: {\n                select: {\n                  email: true,\n                  name: true,\n                },\n              },\n            },\n          },\n          video: {\n            select: {\n              title: true,\n            },\n          },\n        },\n      });\n      return data;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/entities/course.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Course {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoursesController.html":{"url":"controllers/CoursesController.html","title":"controller - CoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                countTotalIncome\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByUuid\n                            \n                            \n                                    \n                                findByUuidTeacher\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findOneByUuid\n                            \n                            \n                                    \n                                findOneByUuidTeacher\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                updateSequenceVideo\n                            \n                            \n                                    \n                                    \n                                updateThumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        countTotalIncome\n                        \n                    \n                \n            \n            \n                \n                        \n                    countTotalIncome(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('teacher/income/:courseId')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCourseDto: CreateCourseDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCourseDto\n                                            \n                                                            CreateCourseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUuid(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByUuidTeacher\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUuidTeacher(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/teacher')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUuid(courseId: number, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:courseId')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByUuidTeacher\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUuidTeacher(courseId: number, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/teacher/:courseId')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateCourseDto: Prisma.CourseUpdateInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCourseDto\n                                            \n                                                            Prisma.CourseUpdateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateSequenceVideo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSequenceVideo(id: number, data: literal type[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/arrange/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateThumbnail\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateThumbnail(id: number, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/thumbnail/:id')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/courses/courses.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseIntPipe,\n  Req,\n  UseInterceptors,\n  UploadedFile,\n} from '@nestjs/common';\nimport { CoursesService } from './courses.service';\nimport { Prisma } from '@prisma/client';\nimport { Public } from 'src/auth/auth.decorator';\nimport { CreateCourseDto } from './dto/create-course.dto';\nimport { Request } from 'express';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@Controller('courses')\nexport class CoursesController {\n  constructor(private readonly coursesService: CoursesService) {}\n\n  @Post()\n  create(@Body() createCourseDto: CreateCourseDto, @Req() req: Request) {\n    return this.coursesService.create({\n      ...createCourseDto,\n      uuid: req['user'].uuid,\n    });\n  }\n\n  @Public()\n  @Get()\n  findAll() {\n    return this.coursesService.findAll();\n  }\n\n  @Get('/user')\n  findByUuid(@Req() req: Request) {\n    return this.coursesService.findByUuidUser(req['user'].uuid);\n  }\n\n  @Get('/user/:courseId')\n  findOneByUuid(\n    @Param('courseId', ParseIntPipe) courseId: number,\n    @Req() req: Request,\n  ) {\n    return this.coursesService.findOneByUuid(courseId, req['user'].uuid);\n  }\n\n  @Get('/teacher')\n  findByUuidTeacher(@Req() req: Request) {\n    return this.coursesService.findByUuidTeacher(req['user'].uuid);\n  }\n\n  @Get('teacher/income/:courseId')\n  countTotalIncome(@Req() req: Request) {\n    return this.coursesService.countTotalIncome(+req.params.courseId);\n  }\n\n  @Get('/teacher/:courseId')\n  findOneByUuidTeacher(\n    @Param('courseId', ParseIntPipe) courseId: number,\n    @Req() req: Request,\n  ) {\n    return this.coursesService.findOneByUuidTeacher(courseId, req['user'].uuid);\n  }\n\n  @Public()\n  @Get(':id')\n  findOne(@Param('id', ParseIntPipe) id: number) {\n    return this.coursesService.findOne(id);\n  }\n\n  @Patch('/thumbnail/:id')\n  @UseInterceptors(FileInterceptor('thumbnail'))\n  updateThumbnail(\n    @Param('id', ParseIntPipe) id: number,\n    @UploadedFile() file: Express.Multer.File,\n  ) {\n    return this.coursesService.uploadThumbnail(id, file);\n  }\n\n  @Patch('/arrange/:id')\n  updateSequenceVideo(\n    @Param('id', ParseIntPipe) id: number,\n    @Body()\n    data: {\n      id: number;\n      chapter: number;\n      sequence: number;\n    }[],\n  ) {\n    return this.coursesService.updateSequenceVideo(id, data);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id', ParseIntPipe) id: number,\n    @Body() updateCourseDto: Prisma.CourseUpdateInput,\n  ) {\n    return this.coursesService.update(id, updateCourseDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id', ParseIntPipe) id: number) {\n    return this.coursesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService\n\nCoursesService\n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoursesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CoursesService } from './courses.service';\nimport { CoursesController } from './courses.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    MulterModule.register({\n      storage: diskStorage({\n        destination: join(\n          __dirname,\n          '..',\n          '..',\n          'public',\n          'images',\n          'thumbnails',\n        ),\n        filename: (req, file, cb) => {\n          cb(null, `${Date.now()}-${file.originalname}`);\n        },\n      }),\n    }),\n  ],\n  controllers: [CoursesController],\n  providers: [CoursesService],\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursesService.html":{"url":"injectables/CoursesService.html","title":"injectable - CoursesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoursesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countTotalIncome\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUuidTeacher\n                            \n                            \n                                    Async\n                                findByUuidUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByUuid\n                            \n                            \n                                    Async\n                                findOneByUuidTeacher\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateSequenceVideo\n                            \n                            \n                                    Async\n                                uploadThumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countTotalIncome\n                        \n                    \n                \n            \n            \n                \n                        \n                    countTotalIncome(courseId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCourseDto: CreateCourseDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCourseDto\n                                            \n                                                            CreateCourseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUuidTeacher\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUuidTeacher(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:255\n                        \n                    \n\n\n            \n                \n                        find all teacher's courses\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUuidUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUuidUser(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:186\n                        \n                    \n\n\n            \n                \n                         find all user's course\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUuid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUuid(courseId: number, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:210\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUuidTeacher\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUuidTeacher(courseId: number, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:268\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:351\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateCourseDto: Prisma.CourseUpdateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:304\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCourseDto\n                                            \n                                                            Prisma.CourseUpdateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSequenceVideo\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSequenceVideo(courseId: number, data: literal type[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:320\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                courseId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadThumbnail\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadThumbnail(id: number, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/courses/courses.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { DatabaseService } from 'src/database/database.service';\nimport { Prisma } from '@prisma/client';\nimport {\n  NotAcceptableException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { CreateCourseDto } from './dto/create-course.dto';\nimport { join } from 'path';\n\n@Injectable()\nexport class CoursesService {\n  constructor(private databaseService: DatabaseService) {}\n  async create(createCourseDto: CreateCourseDto) {\n    try {\n      if (createCourseDto) {\n        const course: Prisma.UserUpdateInput = {\n          courses: {\n            create: {\n              title: createCourseDto.title,\n              price: Number.parseInt(createCourseDto.price),\n              categoryId: Number.parseInt(createCourseDto.categoryId),\n              description: createCourseDto.description,\n              image:\n                createCourseDto.image ??\n                '/upload/image/default/default-thumbnail.png',\n            },\n          },\n        };\n        await this.databaseService.user.update({\n          where: {\n            uuid: createCourseDto.uuid,\n          },\n          data: course,\n        });\n        return course;\n      }\n    } catch (error) {\n      throw new NotAcceptableException();\n    }\n  }\n  async uploadThumbnail(id: number, file: Express.Multer.File) {\n    const THUMBNAIL_FOLDER_PATH = 'http://localhost:3001/images/thumbnails';\n    try {\n      const updatedThumbnail = await this.databaseService.course.update({\n        where: {\n          id,\n        },\n        data: {\n          image: join(THUMBNAIL_FOLDER_PATH, file.filename),\n        },\n      });\n      return updatedThumbnail;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async findAll() {\n    try {\n      const courses = await this.databaseService.course.findMany({\n        select: {\n          id: true,\n          uuid: true,\n          categoryId: true,\n          title: true,\n          description: true,\n          image: true,\n          price: true,\n          createdAt: true,\n          updateAt: true,\n          user: {\n            select: {\n              email: true,\n              name: true,\n            },\n          },\n          category: {\n            select: {\n              description: true,\n            },\n          },\n        },\n      });\n      return courses;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async findOne(id: number) {\n    try {\n      const course = await this.databaseService.course.findUnique({\n        where: {\n          id: id,\n        },\n        select: {\n          id: true,\n          uuid: true,\n          categoryId: true,\n          title: true,\n          description: true,\n          image: true,\n          price: true,\n          createdAt: true,\n          updateAt: true,\n          user: {\n            select: {\n              name: true,\n              email: true,\n            },\n          },\n          category: {\n            select: {\n              description: true,\n            },\n          },\n          chapters: {\n            orderBy: {\n              sequenceNumber: 'asc',\n            },\n            select: {\n              id: true,\n              courseId: true,\n              title: true,\n              sequenceNumber: true,\n              videos: {\n                orderBy: {\n                  sequenceNumber: 'asc',\n                },\n                select: {\n                  title: true,\n                  duration: true,\n                  sequenceNumber: true,\n                },\n              },\n            },\n          },\n        },\n      });\n      return course ?? {};\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async countTotalIncome(courseId: number) {\n    try {\n      const total = await this.databaseService.payment.aggregate({\n        where: {\n          courseId: courseId,\n        },\n        _sum: {\n          amount: true,\n        },\n        _count: {\n          uuid: true,\n        },\n      });\n      const students = await this.databaseService.payment.findMany({\n        where: {\n          courseId: courseId,\n        },\n        select: {\n          user: {\n            select: {\n              name: true,\n              email: true,\n            },\n          },\n          createdAt: true,\n        },\n      });\n      return { ...total, students };\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException();\n    }\n  }\n\n  /**\n   *  find all user's course\n   * @param uuid\n   * @returns\n   */\n  async findByUuidUser(uuid: string) {\n    try {\n      const courses = await this.databaseService.enrollment.findMany({\n        where: {\n          uuid: uuid,\n        },\n        include: {\n          course: {\n            include: {\n              user: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      });\n      return courses;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async findOneByUuid(courseId: number, uuid: string) {\n    try {\n      const courseDetail = await this.databaseService.enrollment.findUnique({\n        where: {\n          uuid_courseId: {\n            uuid: uuid,\n            courseId: courseId,\n          },\n        },\n        select: {\n          course: {\n            include: {\n              chapters: {\n                include: {\n                  videos: {\n                    orderBy: {\n                      sequenceNumber: 'asc',\n                    },\n                    include: {\n                      learnings: true,\n                    },\n                  },\n                },\n                orderBy: {\n                  sequenceNumber: 'asc',\n                },\n              },\n            },\n          },\n        },\n      });\n      if (!courseDetail) {\n        throw new NotFoundException();\n      }\n      return courseDetail;\n    } catch (e) {\n      throw new NotFoundException();\n    }\n  }\n\n  /**\n   * find all teacher's courses\n   * @param uuid\n   * @returns\n   */\n  async findByUuidTeacher(uuid: string) {\n    try {\n      const courses = await this.databaseService.course.findMany({\n        where: {\n          uuid,\n        },\n      });\n      return courses;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async findOneByUuidTeacher(courseId: number, uuid: string) {\n    try {\n      const courseDetail = await this.databaseService.course.findUnique({\n        where: {\n          id: courseId,\n          user: {\n            uuid: uuid,\n          },\n        },\n        include: {\n          chapters: {\n            include: {\n              videos: {\n                orderBy: {\n                  sequenceNumber: 'asc',\n                },\n              },\n            },\n          },\n          user: {\n            select: {\n              name: true,\n              email: true,\n            },\n          },\n        },\n      });\n      if (!courseDetail) {\n        throw new NotFoundException();\n      }\n      return courseDetail;\n    } catch (e) {\n      throw new NotFoundException();\n    }\n  }\n\n  async update(id: number, updateCourseDto: Prisma.CourseUpdateInput) {\n    try {\n      const courseUpdate = await this.databaseService.course.update({\n        where: { id },\n        data: {\n          ...updateCourseDto,\n          price: +updateCourseDto.price,\n        },\n      });\n      return courseUpdate;\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async updateSequenceVideo(\n    courseId: number,\n    data: {\n      id: number;\n      chapter: number;\n      sequence: number;\n    }[],\n  ) {\n    try {\n      data.forEach(async (value) => {\n        await this.databaseService.video.update({\n          where: {\n            id: value.id,\n            chapter: {\n              courseId: courseId,\n            },\n          },\n          data: {\n            chapterId: value.chapter,\n            sequenceNumber: value.sequence,\n          },\n        });\n      });\n      return {\n        success: true,\n      };\n    } catch (error) {\n      return new InternalServerErrorException();\n    }\n  }\n\n  async remove(id: number) {\n    try {\n      const courseDelete = await this.databaseService.course.delete({\n        where: { id },\n      });\n      return courseDelete;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateChapterDto.html":{"url":"classes/CreateChapterDto.html","title":"class - CreateChapterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateChapterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chapters/dto/create-chapter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                    Optional\n                                sequenceNumber\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/chapters/dto/create-chapter.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sequenceNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/chapters/dto/create-chapter.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/chapters/dto/create-chapter.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateChapterDto {\n  title: string;\n  courseId: number;\n  sequenceNumber?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCommentDto.html":{"url":"classes/CreateCommentDto.html","title":"class - CreateCommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/comment/dto/create-comment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                parentId\n                            \n                            \n                                videoId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/comment/dto/create-comment.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/comment/dto/create-comment.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/comment/dto/create-comment.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCommentDto {\n  videoId: number;\n  content: string;\n  parentId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/create-course.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/courses/dto/create-course.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCourseDto {\n  uuid: string;\n  categoryId: string;\n  title: string;\n  description: string;\n  image: string;\n  price: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFolderDto.html":{"url":"classes/CreateFolderDto.html","title":"class - CreateFolderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFolderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/folders/dto/create-folder.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                courseId\n                            \n                            \n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                parentFolderId\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ValidateIf((obj, value) => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/folders/dto/create-folder.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/folders/dto/create-folder.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        parentFolderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ValidateIf((obj, value) => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/folders/dto/create-folder.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/folders/dto/create-folder.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, ValidateIf } from 'class-validator';\n\nexport class CreateFolderDto {\n  name: string;\n  @IsNumber()\n  @ValidateIf((obj, value) => value != null)\n  parentFolderId?: number;\n  uuid: string;\n  @IsNumber()\n  @ValidateIf((obj, value) => value != null)\n  courseId?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLearningDto.html":{"url":"classes/CreateLearningDto.html","title":"class - CreateLearningDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLearningDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/learning/dto/create-learning.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateLearningDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNoteDto.html":{"url":"classes/CreateNoteDto.html","title":"class - CreateNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/dto/create-note.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    \n                                    \n                                courseId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                folderId\n                            \n                            \n                                title\n                            \n                            \n                                uuid\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                videoId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notes/dto/create-note.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ValidateIf((obj, value) => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notes/dto/create-note.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        folderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ValidateIf((obj, value) => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notes/dto/create-note.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notes/dto/create-note.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/notes/dto/create-note.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        videoId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@ValidateIf((obj, value) => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/notes/dto/create-note.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, ValidateIf } from 'class-validator';\n\nexport class CreateNoteDto {\n  title: string;\n  content: string;\n  @IsInt()\n  @ValidateIf((obj, value) => value != null)\n  folderId?: number;\n  uuid: string;\n  @IsInt()\n  @ValidateIf((obj, value) => value != null)\n  videoId?: number;\n  @IsInt()\n  @ValidateIf((obj, value) => value != null)\n  courseId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNotebookDto.html":{"url":"classes/CreateNotebookDto.html","title":"class - CreateNotebookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNotebookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notebook/dto/create-notebook.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateNotebookDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentDto.html":{"url":"classes/CreatePaymentDto.html","title":"class - CreatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/create-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card_number\n                            \n                            \n                                cvv\n                            \n                            \n                                email\n                            \n                            \n                                expiration\n                            \n                            \n                                    \n                                id_course\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        card_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cvv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id_course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt } from 'class-validator';\nexport class CreatePaymentDto {\n  name: string;\n  card_number: string;\n  expiration: string;\n  cvv: string;\n  email: string;\n  @IsInt()\n  id_course: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVideoDto.html":{"url":"classes/CreateVideoDto.html","title":"class - CreateVideoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVideoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/videos/dto/create-video.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                courseId\n                            \n                            \n                                videos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/videos/dto/create-video.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Video[]\n\n                    \n                \n                    \n                        \n                                Defined in src/videos/dto/create-video.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber } from 'class-validator';\n\nexport class Video {\n  title: string;\n  url: string;\n  @IsNumber()\n  duration: number;\n  @IsNumber()\n  chapterId: number;\n}\n\nexport default class CreateVideoDto {\n  @IsNumber()\n  courseId: number;\n  videos: Video[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDatabaseService \n\nDatabaseService \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { DatabaseService } from './database.service';\n\n@Global()\n@Module({\n  providers: [DatabaseService],\n  exports: [DatabaseService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/database.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n@Injectable()\nexport class DatabaseService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Folder.html":{"url":"classes/Folder.html","title":"class - Folder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Folder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/folders/entities/folder.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Folder {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FoldersController.html":{"url":"controllers/FoldersController.html","title":"controller - FoldersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FoldersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/folders/folders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                folders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFolderDto: CreateFolderDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/folders/folders.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFolderDto\n                                            \n                                                            CreateFolderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req, parentFolderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/folders/folders.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentFolderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/folders/folders.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/folders/folders.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFolderDto: UpdateFolderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/folders/folders.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFolderDto\n                                            \n                                                            UpdateFolderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Request,\n  Query,\n  Req,\n} from '@nestjs/common';\nimport { FoldersService } from './folders.service';\nimport { CreateFolderDto } from './dto/create-folder.dto';\nimport { UpdateFolderDto } from './dto/update-folder.dto';\n\n@Controller('folders')\nexport class FoldersController {\n  constructor(private readonly foldersService: FoldersService) {}\n\n  @Post()\n  create(@Body() createFolderDto: CreateFolderDto, @Request() req) {\n    return this.foldersService.create({\n      ...createFolderDto,\n      uuid: req.user['uuid'],\n    });\n  }\n\n  @Get()\n  findAll(@Req() req, @Query('parentFolderId') parentFolderId: string) {\n    return this.foldersService.findAll(req.user['uuid'], +parentFolderId);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.foldersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFolderDto: UpdateFolderDto) {\n    return this.foldersService.update(+id, updateFolderDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.foldersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FoldersModule.html":{"url":"modules/FoldersModule.html","title":"module - FoldersModule","body":"\n                   \n\n\n\n\n    Modules\n    FoldersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FoldersModule\n\n\n\ncluster_FoldersModule_providers\n\n\n\n\nFoldersService\n\nFoldersService\n\n\n\nFoldersModule\n\nFoldersModule\n\nFoldersModule -->\n\nFoldersService->FoldersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/folders/folders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FoldersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FoldersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FoldersService } from './folders.service';\nimport { FoldersController } from './folders.controller';\n\n@Module({\n  controllers: [FoldersController],\n  providers: [FoldersService],\n})\nexport class FoldersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FoldersService.html":{"url":"injectables/FoldersService.html","title":"injectable - FoldersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FoldersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/folders/folders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/folders/folders.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFolderDto: CreateFolderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/folders/folders.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFolderDto\n                                            \n                                                            CreateFolderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(uuid: string, parentFolderId: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/folders/folders.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentFolderId\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/folders/folders.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/folders/folders.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFolderDto: UpdateFolderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/folders/folders.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFolderDto\n                                            \n                                                            UpdateFolderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { CreateFolderDto } from './dto/create-folder.dto';\nimport { UpdateFolderDto } from './dto/update-folder.dto';\nimport { DatabaseService } from 'src/database/database.service';\n\n@Injectable()\nexport class FoldersService {\n  constructor(private databaseService: DatabaseService) {}\n  async create(createFolderDto: CreateFolderDto) {\n    try {\n      const createdFolder = await this.databaseService.folders.create({\n        data: {\n          ...createFolderDto,\n        },\n      });\n      return createdFolder;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  findAll(uuid: string, parentFolderId: number | null) {\n    return this.databaseService.folders.findMany({\n      where: {\n        uuid: uuid,\n        parentFolderId: parentFolderId,\n      },\n      include: {\n        children: true,\n      },\n    });\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} folder`;\n  }\n\n  update(id: number, updateFolderDto: UpdateFolderDto) {\n    return `This action updates a #${id} folder`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} folder`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Gateway.html":{"url":"classes/Gateway.html","title":"class - Gateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Gateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getInfoNote\n                            \n                            \n                                    \n                                newMessage\n                            \n                            \n                                onModuleInit\n                            \n                            \n                                    \n                                    Async\n                                setTimeWatchVideo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/gateway/gateway.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/gateway/gateway.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getInfoNote\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfoNote(body: literal type, client: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('write_note')\n                \n            \n\n                    \n                        \n                            Defined in src/gateway/gateway.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        newMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    newMessage(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('newMessage')\n                \n            \n\n                    \n                        \n                            Defined in src/gateway/gateway.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/gateway/gateway.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        setTimeWatchVideo\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTimeWatchVideo(body: literal type, client: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('leanrning_timestamp')\n                \n            \n\n                    \n                        \n                            Defined in src/gateway/gateway.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { OnModuleInit } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport {\n  ConnectedSocket,\n  MessageBody,\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from '@nestjs/websockets';\n\nimport { Server, Socket } from 'socket.io';\nimport { DatabaseService } from 'src/database/database.service';\n\n@WebSocketGateway(3003, {\n  cors: {\n    origin: 'http://localhost:3000',\n  },\n})\nexport class Gateway implements OnModuleInit {\n  constructor(\n    private databaseService: DatabaseService,\n    private jwtService: JwtService,\n  ) {}\n  @WebSocketServer()\n  server: Server;\n  onModuleInit() {\n    this.server.on('connection', async (socket) => {\n      console.log(socket.id, 'connected');\n      this.server.emit('connected', socket.id);\n    });\n  }\n  @SubscribeMessage('newMessage')\n  newMessage(\n    @MessageBody() body: { title: string; id?: number; content: string },\n  ) {\n    if (body.id) {\n      //\n    } else {\n      //\n    }\n  }\n\n  @SubscribeMessage('write_note')\n  async getInfoNote(\n    @MessageBody()\n    body: { title: string; idVideo: number; content: string; idNote: number },\n    @ConnectedSocket() client: Socket,\n  ) {\n    try {\n      const uuid = this.jwtService.verify(client.handshake.auth.token).uuid;\n      const test = await this.databaseService.notes.upsert({\n        where: {\n          uuid_videoId: {\n            uuid: uuid,\n            videoId: body.idVideo,\n          },\n        },\n        create: {\n          uuid: uuid,\n          videoId: body.idVideo,\n          title: body.title,\n          content: body.content,\n        },\n        update: {\n          title: body.title,\n          content: body.content,\n        },\n      });\n      console.log(test);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  @SubscribeMessage('leanrning_timestamp')\n  async setTimeWatchVideo(\n    @MessageBody()\n    body: {\n      videoId: number;\n      timeLearned: number;\n      completed: boolean;\n    },\n    @ConnectedSocket() client: Socket,\n  ) {\n    try {\n      const uuid = this.jwtService.verify(client.handshake.auth.token).uuid;\n      const res = await this.databaseService.learning.upsert({\n        where: {\n          videoId_uuid: {\n            uuid: uuid,\n            videoId: body.videoId,\n          },\n        },\n        update: {\n          timeLearned: body.timeLearned,\n          completed: body.completed,\n        },\n        create: {\n          timeLearned: body.timeLearned,\n          completed: body.completed,\n          user: {\n            connect: {\n              uuid: uuid,\n            },\n          },\n          video: {\n            connect: {\n              id: body.videoId,\n            },\n          },\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gateway/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Gateway } from './gateway';\n\n@Module({\n  providers: [Gateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Learning.html":{"url":"classes/Learning.html","title":"class - Learning","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Learning\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/learning/entities/learning.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Learning {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LearningController.html":{"url":"controllers/LearningController.html","title":"controller - LearningController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LearningController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/learning/learning.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                learning\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createLearningDto: CreateLearningDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/learning/learning.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLearningDto\n                                            \n                                                            CreateLearningDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/learning/learning.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(idVideo: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/learning/learning.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idVideo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/learning/learning.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateLearningDto: UpdateLearningDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/learning/learning.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLearningDto\n                                            \n                                                            UpdateLearningDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseIntPipe,\n  Request,\n} from '@nestjs/common';\nimport { LearningService } from './learning.service';\nimport { CreateLearningDto } from './dto/create-learning.dto';\nimport { UpdateLearningDto } from './dto/update-learning.dto';\n\n@Controller('learning')\nexport class LearningController {\n  constructor(private readonly learningService: LearningService) {}\n\n  @Post()\n  create(@Body() createLearningDto: CreateLearningDto) {\n    return this.learningService.create(createLearningDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.learningService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id', ParseIntPipe) idVideo: number, @Request() req) {\n    return this.learningService.findOne(idVideo, req.user['uuid']);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateLearningDto: UpdateLearningDto,\n  ) {\n    return this.learningService.update(+id, updateLearningDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.learningService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearningModule.html":{"url":"modules/LearningModule.html","title":"module - LearningModule","body":"\n                   \n\n\n\n\n    Modules\n    LearningModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LearningModule\n\n\n\ncluster_LearningModule_providers\n\n\n\n\nLearningService\n\nLearningService\n\n\n\nLearningModule\n\nLearningModule\n\nLearningModule -->\n\nLearningService->LearningModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/learning/learning.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LearningService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LearningController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LearningService } from './learning.service';\nimport { LearningController } from './learning.controller';\n\n@Module({\n  controllers: [LearningController],\n  providers: [LearningService],\n})\nexport class LearningModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LearningService.html":{"url":"injectables/LearningService.html","title":"injectable - LearningService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LearningService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/learning/learning.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/learning/learning.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createLearningDto: CreateLearningDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/learning/learning.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLearningDto\n                                            \n                                                            CreateLearningDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/learning/learning.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(idVideo: number, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/learning/learning.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idVideo\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/learning/learning.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateLearningDto: UpdateLearningDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/learning/learning.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLearningDto\n                                            \n                                                            UpdateLearningDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { CreateLearningDto } from './dto/create-learning.dto';\nimport { UpdateLearningDto } from './dto/update-learning.dto';\nimport { DatabaseService } from 'src/database/database.service';\n\n@Injectable()\nexport class LearningService {\n  constructor(private databaseService: DatabaseService) {}\n  create(createLearningDto: CreateLearningDto) {\n    return 'This action adds a new learning';\n  }\n\n  findAll() {\n    return `This action returns all learning`;\n  }\n\n  async findOne(idVideo: number, uuid: string) {\n    try {\n      const learning = await this.databaseService.learning.findUnique({\n        where: {\n          videoId_uuid: {\n            videoId: idVideo,\n            uuid: uuid,\n          },\n        },\n      });\n      return learning;\n    } catch (error) {\n      console.log(error);\n      throw new InternalServerErrorException();\n    }\n  }\n\n  update(id: number, updateLearningDto: UpdateLearningDto) {\n    return `This action updates a #${id} learning`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} learning`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Note.html":{"url":"classes/Note.html","title":"class - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/entities/note.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Note {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notebook.html":{"url":"classes/Notebook.html","title":"class - Notebook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notebook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notebook/entities/notebook.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Notebook {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotebookController.html":{"url":"controllers/NotebookController.html","title":"controller - NotebookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotebookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notebook/notebook.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                notebook\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNotebookDto: CreateNotebookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/notebook/notebook.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNotebookDto\n                                            \n                                                            CreateNotebookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/notebook/notebook.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/notebook/notebook.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/notebook/notebook.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateNotebookDto: UpdateNotebookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/notebook/notebook.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNotebookDto\n                                            \n                                                            UpdateNotebookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { NotebookService } from './notebook.service';\nimport { CreateNotebookDto } from './dto/create-notebook.dto';\nimport { UpdateNotebookDto } from './dto/update-notebook.dto';\n\n@Controller('notebook')\nexport class NotebookController {\n  constructor(private readonly notebookService: NotebookService) {}\n\n  @Post()\n  create(@Body() createNotebookDto: CreateNotebookDto) {\n    return this.notebookService.create(createNotebookDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.notebookService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.notebookService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateNotebookDto: UpdateNotebookDto) {\n    return this.notebookService.update(+id, updateNotebookDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.notebookService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotebookModule.html":{"url":"modules/NotebookModule.html","title":"module - NotebookModule","body":"\n                   \n\n\n\n\n    Modules\n    NotebookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotebookModule\n\n\n\ncluster_NotebookModule_providers\n\n\n\n\nNotebookService\n\nNotebookService\n\n\n\nNotebookModule\n\nNotebookModule\n\nNotebookModule -->\n\nNotebookService->NotebookModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notebook/notebook.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotebookService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotebookController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotebookService } from './notebook.service';\nimport { NotebookController } from './notebook.controller';\n\n@Module({\n  controllers: [NotebookController],\n  providers: [NotebookService],\n})\nexport class NotebookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotebookService.html":{"url":"injectables/NotebookService.html","title":"injectable - NotebookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotebookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notebook/notebook.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createNotebookDto: CreateNotebookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notebook/notebook.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNotebookDto\n                                            \n                                                            CreateNotebookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/notebook/notebook.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notebook/notebook.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notebook/notebook.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateNotebookDto: UpdateNotebookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notebook/notebook.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNotebookDto\n                                            \n                                                            UpdateNotebookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateNotebookDto } from './dto/create-notebook.dto';\nimport { UpdateNotebookDto } from './dto/update-notebook.dto';\n\n@Injectable()\nexport class NotebookService {\n  create(createNotebookDto: CreateNotebookDto) {\n    return 'This action adds a new notebook';\n  }\n\n  findAll() {\n    return `This action returns all notebook`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} notebook`;\n  }\n\n  update(id: number, updateNotebookDto: UpdateNotebookDto) {\n    return `This action updates a #${id} notebook`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} notebook`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotesController.html":{"url":"controllers/NotesController.html","title":"controller - NotesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/notes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                notes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findOneByVideoId\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNoteDto: CreateNoteDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/notes/notes.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNoteDto\n                                            \n                                                            CreateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req, parentFolderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/notes/notes.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentFolderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/notes/notes.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByVideoId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByVideoId(videoId: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/video/:videoId')\n                \n            \n\n                    \n                        \n                            Defined in src/notes/notes.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                videoId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/notes/notes.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateNoteDto: UpdateNoteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/notes/notes.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNoteDto\n                                            \n                                                            UpdateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  ParseIntPipe,\n  Req,\n  Query,\n} from '@nestjs/common';\nimport { NotesService } from './notes.service';\nimport { CreateNoteDto } from './dto/create-note.dto';\nimport { UpdateNoteDto } from './dto/update-note.dto';\nimport { Request } from 'express';\n\n@Controller('notes')\nexport class NotesController {\n  constructor(private readonly notesService: NotesService) {}\n\n  @Post()\n  create(@Body() createNoteDto: CreateNoteDto, @Req() req) {\n    return this.notesService.create({\n      ...createNoteDto,\n      uuid: req.user['uuid'],\n    });\n  }\n\n  @Get()\n  findAll(@Req() req, @Query('parentFolderId') parentFolderId: string) {\n    return this.notesService.findAll(req.user['uuid'], +parentFolderId);\n  }\n  @Get('/video/:videoId')\n  findOneByVideoId(\n    @Param('videoId', ParseIntPipe) videoId: number,\n    @Req() req,\n  ) {\n    return this.notesService.findOneByVideoId(videoId, req.user['uuid']);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string, @Req() req) {\n    return this.notesService.findOne(+id, req.user['uuid']);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateNoteDto: UpdateNoteDto) {\n    return this.notesService.update(+id, updateNoteDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.notesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotesModule.html":{"url":"modules/NotesModule.html","title":"module - NotesModule","body":"\n                   \n\n\n\n\n    Modules\n    NotesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_providers\n\n\n\n\nNotesService\n\nNotesService\n\n\n\nNotesModule\n\nNotesModule\n\nNotesModule -->\n\nNotesService->NotesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notes/notes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotesService } from './notes.service';\nimport { NotesController } from './notes.controller';\n\n@Module({\n  controllers: [NotesController],\n  providers: [NotesService],\n})\nexport class NotesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotesService.html":{"url":"injectables/NotesService.html","title":"injectable - NotesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/notes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByVideoId\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/notes/notes.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createNoteDto: CreateNoteDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notes/notes.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNoteDto\n                                            \n                                                            CreateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(uuid: string, parentFolderId: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notes/notes.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentFolderId\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notes/notes.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByVideoId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByVideoId(videoId: number, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notes/notes.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                videoId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notes/notes.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateNoteDto: UpdateNoteDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notes/notes.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNoteDto\n                                            \n                                                            UpdateNoteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { CreateNoteDto } from './dto/create-note.dto';\nimport { UpdateNoteDto } from './dto/update-note.dto';\nimport { DatabaseService } from 'src/database/database.service';\n\n@Injectable()\nexport class NotesService {\n  constructor(private databaseService: DatabaseService) {}\n  async create(createNoteDto: CreateNoteDto) {\n    try {\n      if (createNoteDto.courseId) {\n        const folder = await this.databaseService.folders.findFirst({\n          where: {\n            courseId: createNoteDto.courseId,\n            uuid: createNoteDto.uuid,\n          },\n        });\n        if (folder) {\n          delete createNoteDto.courseId;\n          // create note\n          const noteCreated = await this.databaseService.notes.create({\n            data: {\n              ...createNoteDto,\n              folderId: folder.id,\n            },\n          });\n          return noteCreated;\n        }\n      }\n    } catch (error) {\n      console.log(error);\n\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async findAll(uuid: string, parentFolderId: number | null) {\n    try {\n      const notes = await this.databaseService.notes.findMany({\n        where: {\n          uuid: uuid,\n          folderId: parentFolderId,\n        },\n      });\n\n      return notes;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n  async findOneByVideoId(videoId: number, uuid: string) {\n    try {\n      const note = await this.databaseService.notes.findFirst({\n        where: {\n          uuid: uuid,\n          videoId: videoId,\n        },\n      });\n\n      if (note) {\n        return {\n          found: true,\n          note: { ...note },\n        };\n      } else {\n        return { found: false };\n      }\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  async findOne(id: number, uuid: string) {\n    try {\n      const data = await this.databaseService.notes.findUnique({\n        where: {\n          id: id,\n          uuid: uuid,\n        },\n      });\n      return data;\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n\n  update(id: number, updateNoteDto: UpdateNoteDto) {\n    return `This action updates a #${id} note`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} note`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(body: CreatePaymentDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Req } from '@nestjs/common';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { Request } from 'express';\nimport { PaymentService } from './payment.service';\n\n@Controller('payment')\nexport class PaymentController {\n  constructor(private paymentService: PaymentService) {}\n  @Post()\n  create(@Body() body: CreatePaymentDto, @Req() req: Request) {\n    return this.paymentService.create(body, req['user'].uuid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nPaymentService\n\nPaymentService\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { PaymentController } from './payment.controller';\n\n@Module({\n  providers: [PaymentService],\n  controllers: [PaymentController],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/payment/payment.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreatePaymentDto, uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { DatabaseService } from 'src/database/database.service';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\n\n@Injectable()\nexport class PaymentService {\n  constructor(private databaseService: DatabaseService) {}\n  async create(data: CreatePaymentDto, uuid: string) {\n    try {\n      const course = await this.databaseService.course.findUnique({\n        where: {\n          id: data.id_course,\n        },\n        select: {\n          price: true,\n        },\n      });\n      const paymentCreate = await this.databaseService.payment.create({\n        data: {\n          amount: course.price,\n          courseId: data.id_course,\n          uuid: uuid,\n        },\n      });\n      const enrollCreate = await this.databaseService.enrollment.create({\n        data: {\n          uuid: uuid,\n          courseId: data.id_course,\n        },\n      });\n      return {\n        ...paymentCreate,\n        ...enrollCreate,\n      };\n    } catch (error) {\n      throw new InternalServerErrorException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport { IsEmail } from 'class-validator';\nexport class RegisterDto {\n  name?: string;\n  @IsEmail()\n  email: string;\n  password: string;\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class SignInDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateChapterDto.html":{"url":"classes/UpdateChapterDto.html","title":"class - UpdateChapterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateChapterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chapters/dto/update-chapter.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateChapterDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateChapterDto } from './create-chapter.dto';\n\nexport class UpdateChapterDto extends PartialType(CreateChapterDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCourseDto.html":{"url":"classes/UpdateCourseDto.html","title":"class - UpdateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/dto/update-course.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCourseDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCourseDto } from './create-course.dto';\n\nexport class UpdateCourseDto extends PartialType(CreateCourseDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFolderDto.html":{"url":"classes/UpdateFolderDto.html","title":"class - UpdateFolderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFolderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/folders/dto/update-folder.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFolderDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFolderDto } from './create-folder.dto';\n\nexport class UpdateFolderDto extends PartialType(CreateFolderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLearningDto.html":{"url":"classes/UpdateLearningDto.html","title":"class - UpdateLearningDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLearningDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/learning/dto/update-learning.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateLearningDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateLearningDto } from './create-learning.dto';\n\nexport class UpdateLearningDto extends PartialType(CreateLearningDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNoteDto.html":{"url":"classes/UpdateNoteDto.html","title":"class - UpdateNoteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNoteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notes/dto/update-note.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateNoteDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateNoteDto } from './create-note.dto';\n\nexport class UpdateNoteDto extends PartialType(CreateNoteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNotebookDto.html":{"url":"classes/UpdateNotebookDto.html","title":"class - UpdateNotebookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNotebookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notebook/dto/update-notebook.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateNotebookDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateNotebookDto } from './create-notebook.dto';\n\nexport class UpdateNotebookDto extends PartialType(CreateNotebookDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Module({\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userCreateInput: Prisma.UserCreateInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userCreateInput\n                                            \n                                                        Prisma.UserCreateInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { DatabaseService } from 'src/database/database.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(private databaseService: DatabaseService) {}\n  async findOne(email: string) {\n    return this.databaseService.user.findUnique({\n      where: {\n        email,\n      },\n    });\n  }\n  async create(userCreateInput: Prisma.UserCreateInput) {\n    return this.databaseService.user.create({\n      data: userCreateInput,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Video.html":{"url":"classes/Video.html","title":"class - Video","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Video\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/videos/dto/create-video.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                chapterId\n                            \n                            \n                                    \n                                duration\n                            \n                            \n                                title\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        chapterId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/videos/dto/create-video.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/videos/dto/create-video.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/videos/dto/create-video.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/videos/dto/create-video.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber } from 'class-validator';\n\nexport class Video {\n  title: string;\n  url: string;\n  @IsNumber()\n  duration: number;\n  @IsNumber()\n  chapterId: number;\n}\n\nexport default class CreateVideoDto {\n  @IsNumber()\n  courseId: number;\n  videos: Video[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VideosController.html":{"url":"controllers/VideosController.html","title":"controller - VideosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VideosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/videos/videos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                videos\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, Post, Req } from '@nestjs/common';\nimport { VideosService } from './videos.service';\nimport { Request } from 'express';\nimport CreateVideoDto from './dto/create-video.dto';\n@Controller('videos')\nexport class VideosController {\n  constructor(private videosService: VideosService) {}\n\n  // @Post()\n  // create(@Req() req: Request, @Body() createVideoDto: CreateVideoDto) {\n  //   console.log('request', req['user']);\n  //   return this.videosService.create(req['user'].uuid, createVideoDto);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VideosModule.html":{"url":"modules/VideosModule.html","title":"module - VideosModule","body":"\n                   \n\n\n\n\n    Modules\n    VideosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VideosModule\n\n\n\ncluster_VideosModule_providers\n\n\n\n\nVideosService\n\nVideosService\n\n\n\nVideosModule\n\nVideosModule\n\nVideosModule -->\n\nVideosService->VideosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/videos/videos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VideosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VideosController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VideosController } from './videos.controller';\nimport { VideosService } from './videos.service';\n\n@Module({\n  controllers: [VideosController],\n  providers: [VideosService],\n})\nexport class VideosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VideosService.html":{"url":"injectables/VideosService.html","title":"injectable - VideosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VideosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/videos/videos.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(databaseService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/videos/videos.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        databaseService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport CreateVideoDto from './dto/create-video.dto';\nimport { DatabaseService } from 'src/database/database.service';\n\n@Injectable()\nexport class VideosService {\n  constructor(private databaseService: DatabaseService) {}\n  // async create(uuid: string, createVideoDto: CreateVideoDto) {\n  //   console.log('create video');\n  //   try {\n  //     // check course - user\n  //     const course = await this.databaseService.course.findUnique({\n  //       where: {\n  //         id: createVideoDto.courseId,\n  //         user: {\n  //           uuid: uuid,\n  //         },\n  //       },\n  //     });\n  //     if (!course) {\n  //       console.log('not found');\n  //       throw new NotFoundException();\n  //     }\n\n  //     // create video\n  //     const videoCreate = this.databaseService.video.createMany({\n  //       data: createVideoDto.videos,\n  //     });\n  //     return videoCreate;\n  //   } catch (error) {\n  //     if (error) {\n  //       throw error;\n  //     }\n  //     console.log('internal');\n  //     throw new InternalServerErrorException();\n  //   }\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chapters/chapters.controller.ts\n            \n            controller\n            ChaptersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/chapters/chapters.service.ts\n            \n            injectable\n            ChaptersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/chapters/dto/create-chapter.dto.ts\n            \n            class\n            CreateChapterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/chapters/dto/update-chapter.dto.ts\n            \n            class\n            UpdateChapterDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chapters/entities/chapter.entity.ts\n            \n            class\n            Chapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chart/chart.controller.ts\n            \n            controller\n            ChartController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/chart/chart.service.ts\n            \n            injectable\n            ChartService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/comment/comment.controller.ts\n            \n            controller\n            CommentController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/comment/comment.service.ts\n            \n            injectable\n            CommentService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/comment/dto/create-comment.dto.ts\n            \n            class\n            CreateCommentDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            controller\n            CoursesController\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                14 %\n                (2/14)\n            \n        \n        \n            \n                \n                src/courses/dto/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/courses/dto/update-course.dto.ts\n            \n            class\n            UpdateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/entities/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/folders/dto/create-folder.dto.ts\n            \n            class\n            CreateFolderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/folders/dto/update-folder.dto.ts\n            \n            class\n            UpdateFolderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/folders/entities/folder.entity.ts\n            \n            class\n            Folder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/folders/folders.controller.ts\n            \n            controller\n            FoldersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/folders/folders.service.ts\n            \n            injectable\n            FoldersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/gateway/gateway.ts\n            \n            class\n            Gateway\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/learning/dto/create-learning.dto.ts\n            \n            class\n            CreateLearningDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/learning/dto/update-learning.dto.ts\n            \n            class\n            UpdateLearningDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/learning/entities/learning.entity.ts\n            \n            class\n            Learning\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/learning/learning.controller.ts\n            \n            controller\n            LearningController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/learning/learning.service.ts\n            \n            injectable\n            LearningService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notebook/dto/create-notebook.dto.ts\n            \n            class\n            CreateNotebookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notebook/dto/update-notebook.dto.ts\n            \n            class\n            UpdateNotebookDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notebook/entities/notebook.entity.ts\n            \n            class\n            Notebook\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notebook/notebook.controller.ts\n            \n            controller\n            NotebookController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/notebook/notebook.service.ts\n            \n            injectable\n            NotebookService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/notes/dto/create-note.dto.ts\n            \n            class\n            CreateNoteDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/notes/dto/update-note.dto.ts\n            \n            class\n            UpdateNoteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notes/entities/note.entity.ts\n            \n            class\n            Note\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/notes/notes.controller.ts\n            \n            controller\n            NotesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/notes/notes.service.ts\n            \n            injectable\n            NotesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/payment/dto/create-payment.dto.ts\n            \n            class\n            CreatePaymentDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/payment/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/videos/dto/create-video.dto.ts\n            \n            class\n            CreateVideoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/videos/dto/create-video.dto.ts\n            \n            class\n            Video\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/videos/videos.controller.ts\n            \n            controller\n            VideosController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/videos/videos.service.ts\n            \n            injectable\n            VideosService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.3.3\n        \n            @nestjs/serve-static : ^4.0.1\n        \n            @nestjs/websockets : ^10.3.3\n        \n            @prisma/client : ^5.8.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChaptersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FoldersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearningModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotebookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VideosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_ChaptersModule\n\n\n\ncluster_ChaptersModule_providers\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_providers\n\n\n\ncluster_CommentModule\n\n\n\ncluster_CommentModule_providers\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_FoldersModule\n\n\n\ncluster_FoldersModule_providers\n\n\n\ncluster_LearningModule\n\n\n\ncluster_LearningModule_providers\n\n\n\ncluster_NotebookModule\n\n\n\ncluster_NotebookModule_providers\n\n\n\ncluster_NotesModule\n\n\n\ncluster_NotesModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_VideosModule\n\n\n\ncluster_VideosModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nChaptersModule\n\nChaptersModule\n\nAppModule -->\n\nChaptersModule->AppModule\n\n\n\n\n\nChartModule\n\nChartModule\n\nAppModule -->\n\nChartModule->AppModule\n\n\n\n\n\nCommentModule\n\nCommentModule\n\nAppModule -->\n\nCommentModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDatabaseService \n\nDatabaseService \n\nDatabaseService  -->\n\nDatabaseModule->DatabaseService \n\n\n\n\n\nFoldersModule\n\nFoldersModule\n\nAppModule -->\n\nFoldersModule->AppModule\n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nAppModule -->\n\nGatewayModule->AppModule\n\n\n\n\n\nLearningModule\n\nLearningModule\n\nAppModule -->\n\nLearningModule->AppModule\n\n\n\n\n\nNotebookModule\n\nNotebookModule\n\nAppModule -->\n\nNotebookModule->AppModule\n\n\n\n\n\nNotesModule\n\nNotesModule\n\nAppModule -->\n\nNotesModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nVideosModule\n\nVideosModule\n\nAppModule -->\n\nVideosModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\nAppModule -->\n\nDatabaseService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nChaptersService\n\nChaptersService\n\nChaptersModule -->\n\nChaptersService->ChaptersModule\n\n\n\n\n\nChartService\n\nChartService\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\nCommentService\n\nCommentService\n\nCommentModule -->\n\nCommentService->CommentModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nFoldersService\n\nFoldersService\n\nFoldersModule -->\n\nFoldersService->FoldersModule\n\n\n\n\n\nLearningService\n\nLearningService\n\nLearningModule -->\n\nLearningService->LearningModule\n\n\n\n\n\nNotebookService\n\nNotebookService\n\nNotebookModule -->\n\nNotebookService->NotebookModule\n\n\n\n\n\nNotesService\n\nNotesService\n\nNotesModule -->\n\nNotesService->NotesModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVideosService\n\nVideosService\n\nVideosModule -->\n\nVideosService->VideosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../auth.decorator.ts)\n                        \n                        \n                            Public   (src/.../auth.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
